(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    210544,       3911]
NotebookOptionsPosition[    208808,       3849]
NotebookOutlinePosition[    209167,       3865]
CellTagsIndexPosition[    209124,       3862]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"pts", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"18", ",", " ", "9"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"15", ",", " ", "15"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", " ", "19"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", " ", "16"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3"}], ",", " ", "8"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Graphics", "[", 
  RowBox[{"Polygon", "[", "pts", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.693735828687829*^9, 3.693735852555111*^9}, {
  3.693735935120777*^9, 3.693735989117858*^9}, {3.6937360228120623`*^9, 
  3.693736151286057*^9}}],

Cell[BoxData[
 GraphicsBox[
  PolygonBox[{{0, 0}, {10, 2}, {18, 9}, {15, 15}, {9, 19}, {2, 16}, {-3, 
   8}}]]], "Output",
 CellChangeTimes->{{3.693736055182321*^9, 3.6937361063355703`*^9}, 
   3.6937361523125772`*^9, 3.69374029702689*^9, 3.693807777456944*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"makepolygons", "[", 
   RowBox[{"pts", ",", "10", ",", " ", "5"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.693736124095924*^9, 3.693736126827512*^9}, {
  3.693736157306405*^9, 3.693736185095861*^9}, {3.6937365577366657`*^9, 
  3.693736689767646*^9}, {3.693736816487028*^9, 3.6937368166666327`*^9}, {
  3.6937368508625383`*^9, 3.693736935455717*^9}, {3.693736998254806*^9, 
  3.693737028458501*^9}, {3.693737800829378*^9, 3.6937378144423857`*^9}, {
  3.693737916600181*^9, 3.693737922260167*^9}, {3.693738067952161*^9, 
  3.693738068115288*^9}, {3.693738251427112*^9, 3.6937382741187277`*^9}, {
  3.693738474971424*^9, 3.693738475173415*^9}, {3.693740289021987*^9, 
  3.693740290763268*^9}, {3.693740407983891*^9, 3.693740408341054*^9}, {
  3.6937406617430363`*^9, 3.693740671530333*^9}, {3.693740758314015*^9, 
  3.6937407660306463`*^9}, {3.693807781722477*^9, 3.693807829299931*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0., 0., 0.], EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
    PolygonBox[{{0, 0}, {10, 2}, {18, 9}, {15, 15}, {9, 19}, {2, 16}, {-3, 
     8}}]}, 
   {RGBColor[0.1, 0.1, 0.1], EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
    PolygonBox[
     NCache[{{8, Rational[8, 5]}, {Rational[82, 5], Rational[38, 5]}, {
       Rational[78, 5], Rational[69, 5]}, {
       Rational[51, 5], Rational[91, 5]}, {
       Rational[17, 5], Rational[83, 5]}, {-2, Rational[48, 5]}, {
       Rational[-3, 5], Rational[8, 5]}}, {{8, 1.6}, {16.4, 7.6}, {15.6, 
       13.8}, {10.2, 18.2}, {3.4, 16.6}, {-2, 9.6}, {-0.6, 1.6}}]]}, 
   {RGBColor[0.2, 0.2, 0.2], EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
    PolygonBox[
     NCache[{{Rational[368, 25], Rational[32, 5]}, {
       Rational[394, 25], Rational[314, 25]}, {
       Rational[282, 25], Rational[433, 25]}, {
       Rational[119, 25], Rational[423, 25]}, {Rational[-23, 25], 11}, {
       Rational[-22, 25], Rational[16, 5]}, {
       Rational[157, 25], Rational[8, 5]}}, {{14.72, 6.4}, {15.76, 12.56}, {
       11.28, 17.32}, {4.76, 16.92}, {-0.92, 11}, {-0.88, 3.2}, {6.28, 
       1.6}}]]}, 
   {RGBColor[0.3, 0.3, 0.3], EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
    PolygonBox[
     NCache[{{Rational[1944, 125], Rational[1416, 125]}, {
       Rational[1522, 125], Rational[2046, 125]}, {Rational[758, 125], 17}, {
       Rational[27, 125], Rational[1523, 125]}, {
       Rational[-111, 125], Rational[119, 25]}, {
       Rational[606, 125], Rational[48, 25]}, {
       Rational[1629, 125], Rational[136, 25]}}, {{15.552, 11.328}, {12.176, 
       16.368}, {6.064, 17}, {0.216, 12.184}, {-0.888, 4.76}, {4.848, 1.92}, {
       13.032, 5.44}}]]}, 
   {RGBColor[0.4, 0.4, 0.4], EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
    PolygonBox[
     NCache[{{Rational[8032, 625], Rational[384, 25]}, {
       Rational[4554, 625], Rational[10546, 625]}, {
       Rational[866, 625], Rational[8217, 625]}, {
       Rational[-417, 625], Rational[3903, 625]}, {
       Rational[2313, 625], Rational[311, 125]}, {
       Rational[7122, 625], Rational[592, 125]}, {
       Rational[1881, 125], Rational[6344, 625]}}, {{12.8512, 15.36}, {7.2864,
       16.8736}, {1.3856, 13.1472}, {-0.6672, 6.2448}, {3.7008, 2.488}, {
      11.3952, 4.736}, {15.048, 10.1504}}]]}, 
   {RGBColor[0.5, 0.5, 0.5], EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
    PolygonBox[
     NCache[{{Rational[26248, 3125], Rational[51784, 3125]}, {
       Rational[8018, 3125], Rational[43414, 3125]}, {
       Rational[-802, 3125], Rational[23829, 3125]}, {
       Rational[1767, 625], Rational[10123, 3125]}, {
       Rational[30801, 3125], Rational[2679, 625]}, {
       Rational[44742, 3125], Rational[28336, 3125]}, {
       Rational[41533, 3125], Rational[44744, 3125]}}, {{8.39936, 16.57088}, {
      2.56576, 13.89248}, {-0.25664, 7.62528}, {2.8272, 3.23936}, {9.85632, 
      4.2864}, {14.31744, 9.06752}, {13.29056, 14.31808}}]]}, 
   {RGBColor[0.6, 0.6, 0.6], EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
    PolygonBox[
     NCache[{{Rational[11664, 3125], Rational[45088, 3125]}, {
       Rational[962, 3125], Rational[27746, 3125]}, {
       Rational[34538, 15625], Rational[64321, 15625]}, {
       Rational[132039, 15625], Rational[63703, 15625]}, {
       Rational[209769, 15625], Rational[126739, 15625]}, {
       Rational[210874, 15625], Rational[207312, 15625]}, {
       Rational[5861, 625], Rational[50376, 3125]}}, {{3.73248, 14.42816}, {
      0.30784, 8.87872}, {2.210432, 4.116544}, {8.450496, 4.076992}, {
      13.425216, 8.111296}, {13.495936, 13.267968}, {9.3776, 16.12032}}]]}, 
   {RGBColor[0.7, 0.7, 0.7], EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
    PolygonBox[
     NCache[{{Rational[15512, 15625], Rational[156072, 15625]}, {
       Rational[142962, 78125], Rational[396014, 78125]}, {
       Rational[562694, 78125], Rational[319133, 78125]}, {
       Rational[194223, 15625], Rational[570659, 78125]}, {
       Rational[210653, 15625], Rational[955987, 78125]}, {
       Rational[796974, 78125], Rational[1214832, 78125]}, {
       Rational[75961, 15625], Rational[230728, 15625]}}, {{0.992768, 
      9.988608}, {1.8299136, 5.0689792}, {7.2024832, 4.0849024}, {12.430272, 
      7.3044352}, {13.481792, 12.2366336}, {10.2012672, 15.5498496}, {
      4.861504, 14.766592}}]]}, 
   {RGBColor[0.8, 0.8, 0.8], EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
    PolygonBox[
     NCache[{{Rational[649408, 390625], Rational[2364416, 390625]}, {
       Rational[2393738, 390625], Rational[1672546, 390625]}, {
       Rational[4447154, 390625], Rational[2601769, 390625]}, {
       Rational[207367, 15625], Rational[4394607, 390625]}, {
       Rational[4241161, 390625], Rational[1163063, 78125]}, {
       Rational[2316194, 390625], Rational[5829392, 390625]}, {
       Rational[138009, 78125], Rational[855016, 78125]}}, {{1.66248448, 
      6.05290496}, {6.12796928, 4.28171776}, {11.38471424, 6.66052864}, {
      13.271488, 11.25019392}, {10.85737216, 14.8872064}, {5.92945664, 
      14.92324352}, {1.7665152, 10.9442048}}]]}, 
   {RGBColor[0.9, 0.9, 0.9], EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
    PolygonBox[
     NCache[{{Rational[2044872, 390625], Rational[362184, 78125]}, {
       Rational[20182354, 1953125], Rational[12079622, 1953125]}, {
       Rational[25183854, 1953125], Rational[20180197, 1953125]}, {
       Rational[22148819, 1953125], Rational[27655867, 1953125]}, {
       Rational[13505937, 1953125], Rational[29132883, 1953125]}, {
       Rational[5076374, 1953125], Rational[22929712, 1953125]}, {
       Rational[3287677, 1953125], Rational[13732744, 1953125]}}, {{
      5.23487232, 4.6359552}, {10.333365248, 6.184766464}, {12.894133248, 
      10.332260864}, {11.340195328, 14.159803904}, {6.915039744, 
      14.916036096}, {2.599103488, 11.740012544}, {1.683290624, 
      7.031164928}}]]}, 
   {RGBColor[1., 1., 1.], EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
    PolygonBox[
     NCache[{{Rational[90953776, 9765625], Rational[57373088, 9765625]}, {
       Rational[24183554, 1953125], Rational[18560082, 1953125]}, {
       Rational[22755826, 1953125], Rational[26160733, 1953125]}, {
       Rational[76172567, 9765625], Rational[144187399, 9765625]}, {
       Rational[33811433, 9765625], Rational[120851731, 9765625]}, {
       Rational[18227082, 9765625], Rational[77860688, 9765625]}, {
       Rational[44185117, 9765625], Rational[49951144, 9765625]}}, {{
      9.3136666624, 5.8750042112}, {12.381979648, 9.502761984}, {11.650982912,
       13.394295296}, {7.8000708608, 14.7647896576}, {3.4622907392, 
      12.3752172544}, {1.8664531968, 7.9729344512}, {4.5245559808, 
      5.1149971456}}]]}}]], "Output",
 CellChangeTimes->{{3.6937366482826147`*^9, 3.693736690114716*^9}, {
   3.693736888873267*^9, 3.693736961090958*^9}, {3.693737006997712*^9, 
   3.693737024822424*^9}, 3.693737815490911*^9, {3.693737895188633*^9, 
   3.693737936450097*^9}, 3.693737980388143*^9, 3.693738068699705*^9, {
   3.69373825202309*^9, 3.693738274779614*^9}, 3.693738335572411*^9, {
   3.693738451678988*^9, 3.693738475861144*^9}, 3.693740298875874*^9, 
   3.693740409121046*^9, {3.693740662730115*^9, 3.693740671969914*^9}, {
   3.693740756875098*^9, 3.693740766660714*^9}, {3.693807780131958*^9, 
   3.693807842473357*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJysvQe4bVtZ3j9dfa1dT7sVLpfeOwioYAdFwa7YRVRAQRCxK/aGKAqCWLCk
mNgSNTEhpmgSU0wxxUhMIYWYYsIVQWkB2Rm/Mb53zHeOPdY+B///+zz77n3W
XnuuOb/362087Zkvfs4XPv+ZL37us55551Ne9MwXPue5z/ryO5/8ghell+bv
Nwzv95z09ZQ7B34+Gwb9L//3XP4X//j/4efH52/zs3e/+91n/+N//A++l98/
zH+/Ofv7f//vn93znvc8++AP/uCzL/7iLz774R/+4bN/8A/+wdl/+2//7ew9
73lP/pMHTi/5pV/6pWe691n+/+ZstVqd3e1udzv7kA/5kLPnPve53cvcp1zm
cXGZ//2///fZve9977jAjV/mHtPL/MW/+BfP3u/93i9f4Oh9uMxt5TLvH5d5
73vfe/ZJn/RJ+QJXLrjMb/zGb0wuc216mX/7b//t2ZUr5QK3vA+XOZ1e5mUv
e1kl8d1v4DKgzH8H5TKPjcu8/e1vP3vCE56QL3Dv9+FuVtPL/L2/9/fO1ut1
vsADOpd5znOe072b95te5gUveEF9qIfewGXS3by7XOExHZZ59AXPA1PHjbx9
egXnlsc3V0AEuIfXvOY1foW3lCs8usMoT7qxK7xpeoXf/d3frTzy4XuuoKd4
4xvfyBX+5/QKzh4fZVe4/fbbz91DXOGN5QqPiiu84x3vqJzx9Bu7whumV3Cm
+KQbu8LvTq/g/PCMzhWe/exnt1f47XKFR8YV/s//+T+VHz7nxq7wW9Mr/MzP
/Ezlh2c1V3jSk55Ur8DTxhV+s1zhER1+eO6NXeE3pldwfvjSuMJyubzoCr82
vYLzw5c3V3jiE5/Yu8Kvlis8vKMpvsaucNttt+V7+KIv+qL2Cr8yvQI0Fj+8
ZM8V4GquEHLxi9MruF351s4VeIof+qEfOvs7f+fvnP27f/fvzt72trf9XLnC
w+IK3Nn97ne/s+Pj44TF6enpsD07OTnh3/krvXJ27dq1LGk333xzfi39fric
33uU/314eHi22+3ONpvN2Xa7zcjc5z73OfugD/qgSgXjp+Gnp7fwZ//sn80f
mUg/fEH+/0l+gFtvvbV+8fF33nnn2X3ve9+zBz/4wWePeMQjzh796EefPfax
jz17zGMec/bABz4wvye9d7gpX+Mo/90tt9xydvXq1XxrEOo6TDL8VLm1hxqn
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
nf3Y7GtWfyv8/jn3f69lx19UHz7G\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "Section"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.693740309931992*^9, 3.693740312441577*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"GetMidPoints", "[", 
   RowBox[{"list_", ",", "idx_", ",", " ", "s_"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"r", "=", 
      RowBox[{"{", "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"idx", "\[Equal]", "0"}], ",", 
       RowBox[{"Return", "[", "list", "]"}], ",", "Null"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "1"}], ",", 
       RowBox[{"j", "<", 
        RowBox[{"Length", "[", "list", "]"}]}], ",", 
       RowBox[{"j", "++"}], ",", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"r", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"list", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"s", "-", "1"}], ")"}], 
             RowBox[{"list", "[", 
              RowBox[{"[", 
               RowBox[{"j", "+", "1"}], "]"}], "]"}]}]}], ")"}], "/", "s"}]}],
         "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"r", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"list", "[", 
           RowBox[{"[", 
            RowBox[{"Length", "[", "list", "]"}], "]"}], "]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"s", "-", "1"}], ")"}], 
           RowBox[{"list", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}]}], ")"}], "/", "s"}]}], "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"idx", "\[Equal]", "1"}], ",", 
       RowBox[{"Return", "[", "r", "]"}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"GetMidPoints", "[", 
         RowBox[{"r", ",", 
          RowBox[{"idx", "-", "1"}], ",", "s"}], "]"}], "]"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.693736344053792*^9, 3.693736534145749*^9}, {
  3.693736727555236*^9, 3.693736806554624*^9}, {3.693736948924728*^9, 
  3.693736952321353*^9}, {3.69373786680961*^9, 3.6937378820882587`*^9}, {
  3.6937382123846903`*^9, 3.693738234095501*^9}, {3.693740611787993*^9, 
  3.6937406253167467`*^9}, {3.693740714609967*^9, 3.693740753049799*^9}, {
  3.6937414733777*^9, 3.693741473544784*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"makepolygons", "[", 
   RowBox[{"pts_", ",", "depth_", ",", " ", "s_"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"graph", "=", 
      RowBox[{"{", "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "0"}], ",", 
       RowBox[{"i", "\[LessEqual]", "depth"}], ",", 
       RowBox[{"i", "++"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"graph", ",", 
           RowBox[{"RGBColor", "[", 
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{"i", "/", "depth"}], "]"}], ",", 
             RowBox[{"N", "[", 
              RowBox[{"i", "/", "depth"}], "]"}], ",", 
             RowBox[{"N", "[", 
              RowBox[{"i", "/", "depth"}], "]"}]}], "]"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"graph", ",", 
           RowBox[{"EdgeForm", "[", 
            RowBox[{"{", 
             RowBox[{"Thin", ",", "Black"}], "}"}], "]"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"graph", ",", 
           RowBox[{"Polygon", "[", 
            RowBox[{"GetMidPoints", "[", 
             RowBox[{"pts", ",", "i", ",", " ", "s"}], "]"}], "]"}]}], 
          "]"}]}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "graph", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.693737137339611*^9, 3.693737161945114*^9}, {
   3.693737222849093*^9, 3.6937372252439537`*^9}, {3.693737432545134*^9, 
   3.693737433366581*^9}, {3.6937375050211687`*^9, 3.6937375114223747`*^9}, {
   3.693737597931188*^9, 3.693737725137212*^9}, {3.693737756207543*^9, 
   3.69373779010363*^9}, {3.693737929099209*^9, 3.6937379328029623`*^9}, {
   3.693737972714476*^9, 3.693737976630309*^9}, {3.693738089264175*^9, 
   3.693738161450962*^9}, {3.693738241616105*^9, 3.693738245842763*^9}, {
   3.693738293662472*^9, 3.6937384387377243`*^9}, {3.6937406456909447`*^9, 
   3.693740649953878*^9}, 3.693807788548828*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GetMidPoints", "[", 
  RowBox[{"pts", ",", "4"}], "]"}]], "Input",
 CellChangeTimes->{{3.693737851914826*^9, 3.693737858269865*^9}, {
  3.69373801268847*^9, 3.693738046921587*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["217", "16"], ",", 
     FractionBox["141", "16"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["105", "8"], ",", 
     FractionBox["55", "4"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["137", "16"], ",", 
     FractionBox["255", "16"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["51", "16"], ",", 
     FractionBox["219", "16"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["9", "16"], ",", 
     FractionBox["133", "16"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     FractionBox["65", "16"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", 
     FractionBox["71", "16"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6937378532192574`*^9, 3.6937378866859703`*^9}, {
  3.693738013185563*^9, 3.693738047374228*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"makepolygons", "[", 
  RowBox[{"pts", ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.693738106727738*^9, 3.693738110867594*^9}}],

Cell[CellGroupData[{

Cell[BoxData["0"], "Print",
 CellChangeTimes->{{3.693738111311083*^9, 3.693738150762205*^9}}],

Cell[BoxData["1"], "Print",
 CellChangeTimes->{{3.693738111311083*^9, 3.6937381507719383`*^9}}],

Cell[BoxData["2"], "Print",
 CellChangeTimes->{{3.693738111311083*^9, 3.693738150783269*^9}}],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{{3.693738111311083*^9, 3.693738150787231*^9}}],

Cell[BoxData["4"], "Print",
 CellChangeTimes->{{3.693738111311083*^9, 3.693738150791518*^9}}],

Cell[BoxData["5"], "Print",
 CellChangeTimes->{{3.693738111311083*^9, 3.693738150795898*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0., 0., 0.], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0., 0., 0.]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0., 0., 0.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0., 0., 0.],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.2, 0.2, 0.2], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.13333333333333336`, 0.13333333333333336`, 0.13333333333333336`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.2, 0.2, 0.2]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.2, 0.2, 0.2]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.2, 0.2, 0.2],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.4, 0.4, 0.4], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.2666666666666667, 0.2666666666666667, 0.2666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.4, 0.4, 0.4]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.4, 0.4, 0.4]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.4, 0.4, 0.4],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.4, 0.4, 0.4],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.6, 0.6, 0.6]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.6, 0.6, 0.6]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.6, 0.6, 0.6],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.8, 0.8, 0.8], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.5333333333333334, 0.5333333333333334, 0.5333333333333334],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.8, 0.8, 0.8]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.8, 0.8, 0.8]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.8, 0.8, 0.8],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1., 1., 1.], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.6666666666666667, 0.6666666666666667, 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1., 1., 1.]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1., 1., 1.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1., 1., 1.],
    Editable->False,
    Selectable->False]}], "}"}]], "Print",
 CellChangeTimes->{{3.693738111311083*^9, 3.693738150802194*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0., 0., 0.], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0., 0., 0.]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0., 0., 0.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0., 0., 0.],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.2, 0.2, 0.2], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.13333333333333336`, 0.13333333333333336`, 0.13333333333333336`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.2, 0.2, 0.2]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.2, 0.2, 0.2]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.2, 0.2, 0.2],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.4, 0.4, 0.4], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.2666666666666667, 0.2666666666666667, 0.2666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.4, 0.4, 0.4]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.4, 0.4, 0.4]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.4, 0.4, 0.4],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.6, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.4, 0.4, 0.4],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.6, 0.6, 0.6]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.6, 0.6, 0.6]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.6, 0.6, 0.6],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.8, 0.8, 0.8], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.5333333333333334, 0.5333333333333334, 0.5333333333333334],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.8, 0.8, 0.8]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.8, 0.8, 0.8]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.8, 0.8, 0.8],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1., 1., 1.], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.6666666666666667, 0.6666666666666667, 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1., 1., 1.]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1., 1., 1.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1., 1., 1.],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{{3.693738111354698*^9, 3.6937381508123283`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"genrandompolypoints", "[", "n_", "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"r", "=", "10"}], ",", 
      RowBox[{"result", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"rands", "=", 
      RowBox[{"Sort", "[", 
       RowBox[{"RandomReal", "[", 
        RowBox[{
         RowBox[{"2", "Pi"}], ",", 
         RowBox[{"{", "n", "}"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"r", "*", 
           RowBox[{"Sin", "[", 
            RowBox[{"rands", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "]"}]}], ",", 
          RowBox[{"r", "*", 
           RowBox[{"Cos", "[", 
            RowBox[{"rands", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "n"}], "}"}]}], "]"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.693738490488028*^9, 3.6937385092283983`*^9}, {
  3.693738551223967*^9, 3.69373855332733*^9}, {3.693738707634008*^9, 
  3.693738789679747*^9}, {3.6937388249711637`*^9, 3.693738860339387*^9}, {
  3.693738892663459*^9, 3.693738908163466*^9}, {3.693738954597022*^9, 
  3.69373895588832*^9}, {3.6937390118908577`*^9, 3.693739020361499*^9}, {
  3.693739090708551*^9, 3.69373914010752*^9}, {3.693739232560452*^9, 
  3.693739253124401*^9}, {3.6937393120712957`*^9, 3.69373934620674*^9}, {
  3.6937393926008587`*^9, 3.693739413707028*^9}, {3.69373946213807*^9, 
  3.693739465644807*^9}, {3.693739495660367*^9, 3.693739539944434*^9}, {
  3.693739600523979*^9, 3.693739762872727*^9}, {3.693739807895817*^9, 
  3.6937398648058157`*^9}, {3.693739911191061*^9, 3.693739924723228*^9}, {
  3.693739963561129*^9, 3.693739984336084*^9}, {3.693740052572991*^9, 
  3.693740063975526*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"genrandompolypoints", "[", "10", "]"}]], "Input",
 CellChangeTimes->{{3.6937390258289347`*^9, 3.693739026751539*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "9.963683052569298`"}], ",", "0.8514810790283889`"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "9.90440578061602`"}], ",", "1.3794006426343064`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"7.603018200388161`", ",", 
     RowBox[{"-", "6.495699673211991`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.399115620659758`", ",", 
     RowBox[{"-", "6.727041551239948`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.294888286351279`", ",", 
     RowBox[{"-", "7.770095331613214`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.09856403002456549`", ",", 
     RowBox[{"-", "9.99951424480136`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.057080408045094067`", ",", 
     RowBox[{"-", "9.999837090023888`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.215141814521326`", ",", "6.923996576858331`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "7.408818626474762`"}], ",", 
     RowBox[{"-", "6.716353665494442`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.65157121917559`", ",", "6.438435980724183`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.6937390270747128`*^9, {3.69373913413535*^9, 3.693739143264082*^9}, 
   3.693739355533835*^9, 3.6937394178111477`*^9, {3.693739705962603*^9, 
   3.69373976515343*^9}, 3.693739835300488*^9, 3.693739867442428*^9, {
   3.69373991954525*^9, 3.693739931268921*^9}, 3.693739974280044*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rands", "=", 
  RowBox[{"RandomReal", "[", 
   RowBox[{
    RowBox[{"2", "Pi"}], ",", 
    RowBox[{"{", "10", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.693739819717483*^9, 3.693739830762075*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "4.359622562785216`", ",", "2.473678713082533`", ",", "2.2921625371024366`",
    ",", "5.6635157202831685`", ",", "1.6887686073846826`", ",", 
   "3.49959116590194`", ",", "5.874133753533032`", ",", 
   "0.45748909514054414`", ",", "3.4784698880970417`", ",", 
   "2.7766872541547887`"}], "}"}]], "Output",
 CellChangeTimes->{{3.693739828367984*^9, 3.6937398310990133`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{"makepolygons", "[", 
     RowBox[{
      RowBox[{"genrandompolypoints", "[", "4", "]"}], ",", "10"}], "]"}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"makepolygons", "[", 
     RowBox[{
      RowBox[{"genrandompolypoints", "[", "5", "]"}], ",", "15"}], "]"}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"makepolygons", "[", 
     RowBox[{
      RowBox[{"genrandompolypoints", "[", "6", "]"}], ",", "10", ",", "3"}], 
     "]"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"makepolygons", "[", 
     RowBox[{
      RowBox[{"genrandompolypoints", "[", "7", "]"}], ",", "15"}], "]"}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"makepolygons", "[", 
     RowBox[{
      RowBox[{"genrandompolypoints", "[", "8", "]"}], ",", "15"}], "]"}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"makepolygons", "[", 
     RowBox[{
      RowBox[{"genrandompolypoints", "[", "9", "]"}], ",", "15"}], "]"}], 
    "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.693738514611814*^9, 3.6937385413009167`*^9}, 
   3.693739162683621*^9, {3.69373919602206*^9, 3.6937391965358677`*^9}, {
   3.6937400739542713`*^9, 3.693740162097287*^9}, {3.693740222274358*^9, 
   3.693740236550248*^9}, {3.69374027459795*^9, 3.693740279490841*^9}, {
   3.6937408433077593`*^9, 3.693740844960717*^9}, {3.693741396047876*^9, 
   3.693741401499072*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{
     {RGBColor[0., 0., 0.], EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{2.3132879055131736`, 9.728756295961292}, {
       8.997079255077729, -4.364924383978487}, {-9.681558620978336, 
       2.503482108695816}, {-6.057896920597724, 7.956248167284164}}]}, 
     {RGBColor[0.1, 0.1, 0.1], EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{5.655183580295452, 
       2.6819159559914025`}, {-0.3422396829503036, -0.9307211376413353}, \
{-7.86972777078803, 5.229865137989989}, {-1.872304507542275, 
       8.842502231622728}}]}, 
     {RGBColor[0.2, 0.2, 0.2], EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{2.656471948672574, 
       0.8755974091750336}, {-4.105983726869167, 
       2.1495720001743273`}, {-4.871016139165152, 7.036183684806359}, {
       1.8914395363765883`, 5.762209093807066}}]}, 
     {RGBColor[0.3, 0.3, 0.3], EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{-0.7247558890982964, 
       1.5125847046746803`}, {-4.4884999330171595`, 
       4.592877842490343}, {-1.4897883013942819`, 6.399196389306712}, {
       2.2739557425245813`, 3.3189032514910495`}}]}, 
     {RGBColor[0.4, 0.4, 0.4], EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{-2.606627911057728, 
       3.052731273582512}, {-2.9891441172057207`, 5.4960371158985275`}, {
       0.39208372056514973`, 4.859049820398881}, {0.7745999267131425, 
       2.415743978082865}}]}, 
     {RGBColor[0.5, 0.5, 0.5], EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{-2.7978860141317243`, 
       4.27438419474052}, {-1.2985301983202855`, 5.177543468148704}, {
       0.5833418236391461, 3.6373968992408727`}, {-0.9160139921722927, 
       2.734237625832688}}]}, 
     {RGBColor[0.6, 0.6, 0.6], EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{-2.0482081062260047`, 
       4.725963831444612}, {-0.3575941873405697, 
       4.407470183694788}, {-0.16633608426657331`, 
       3.1858172625367804`}, {-1.8569500031520085`, 3.504310910286604}}]}, 
     {RGBColor[0.7, 0.7, 0.7], EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{-1.202901146783287, 4.5667170075697}, {-0.2619651358035715,
        3.7966437231157846`}, {-1.011643043709291, 
       3.3450640864116923`}, {-1.9525790546890067`, 4.115137370865608}}]}, 
     {RGBColor[0.8, 0.8, 0.8], EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{-0.7324331412934293, 
       4.181680365342743}, {-0.6368040897564312, 
       3.570853904763738}, {-1.482111049199149, 
       3.73010072863865}, {-1.577740100736147, 4.340927189217654}}]}, 
     {RGBColor[0.9, 0.9, 0.9], EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{-0.6846186155249303, 
       3.8762671350532405`}, {-1.0594575694777901`, 
       3.650477316701194}, {-1.529925574967648, 
       4.035513958928152}, {-1.155086621014788, 4.261303777280198}}]}, 
     {RGBColor[1., 1., 1.], EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{-0.8720380925013602, 
       3.7633722258772173`}, {-1.294691572222719, 
       3.8429956378146732`}, {-1.342506097991218, 
       4.148408868104175}, {-0.9198526182698592, 4.06878545616672}}]}}], ",", 
   
   GraphicsBox[{
     {RGBColor[0., 0., 0.], EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{-4.183391763076609, -9.082908859865476}, \
{-4.708912701837419, -8.821912557176828}, {-9.884644978586294, \
-1.5145275327007925`}, {-5.349006161515853, 
       8.449149843863905}, {-3.6030208536716932`, 9.328356807498677}}]}, 
     {RGBColor[0.06666666666666667, 0.06666666666666667, 0.06666666666666667],
       EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{-4.446152232457014, -8.952410708521153}, \
{-7.296778840211857, -5.168220044938811}, {-7.616825570051073, 
       3.467311155581556}, {-4.476013507593773, 
       8.888753325681291}, {-3.8932063083741513`, 0.12272397381660038`}}]}, 
     {RGBColor[
      0.13333333333333333`, 0.13333333333333333`, 0.13333333333333333`], 
      EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{-5.871465536334435, -7.0603153767299816`}, \
{-7.456802205131465, -0.8504544446786273}, {-6.046419538822423, 
       6.178032240631424}, {-4.184609907983962, 
       4.505738649748945}, {-4.169679270415583, -4.414843367352276}}]}, 
     {RGBColor[0.2, 0.2, 0.2], EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{-6.66413387073295, -3.9553849107043044`}, \
{-6.751610871976944, 2.6637888979763984`}, {-5.115514723403193, 
       5.341885445190185}, {-4.177144589199772, 
       0.045447641198334665`}, {-5.020572403375009, -5.737579372041129}}]}, 
     {RGBColor[
      0.26666666666666666`, 0.26666666666666666`, 0.26666666666666666`], 
      EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{-6.707872371354947, -0.645798006363953}, \
{-5.933562797690069, 4.002837171583291}, {-4.646329656301482, 
       2.6936665431942597`}, {-4.598858496287391, -2.846065865421397}, \
{-5.84235313705398, -4.846482141372716}}]}, 
     {RGBColor[0.3333333333333333, 0.3333333333333333, 0.3333333333333333], 
      EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{-6.320717584522508, 
       1.678519582609669}, {-5.2899462269957755`, 
       3.3482518573887754`}, {-4.622594076294437, -0.07619966111356868}, \
{-5.220605816670686, -3.8462740033970566`}, {-6.275112754204463, \
-2.7461400738683346`}}]}, 
     {RGBColor[0.4, 0.4, 0.4], EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{-5.805331905759141, 
       2.5133857199992224`}, {-4.956270151645106, 
       1.6360260981376034`}, {-4.921599946482561, -1.9612368322553126`}, \
{-5.747859285437574, -3.2962070386326956`}, {-6.297915169363486, \
-0.5338102456293328}}]}, 
     {RGBColor[0.4666666666666667, 0.4666666666666667, 0.4666666666666667], 
      EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{-5.380801028702123, 
       2.074705909068413}, {-4.938935049063834, -0.16260536705885464`}, \
{-5.334729615960068, -2.628721935444004}, {-6.022887227400529, \
-1.9150086421310142`}, {-6.051623537561314, 0.9897877371849448}}]}, 
     {RGBColor[0.5333333333333333, 0.5333333333333333, 0.5333333333333333], 
      EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{-5.159868038882978, 
       0.9560502710047791}, {-5.1368323325119505`, -1.3956636512514293`}, \
{-5.678808421680299, -2.271865288787509}, {-6.037255382480922, \
-0.4626104524730347}, {-5.716212283131719, 1.5322468231266788`}}]}, 
     {RGBColor[0.6, 0.6, 0.6], EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{-5.148350185697464, -0.2198066901233251}, \
{-5.407820377096124, -1.833764470019469}, {-5.85803190208061, \
-1.367237870630272}, {-5.87673383280632, 
       0.5348181853268221}, {-5.438040161007349, 1.244148547065729}}]}, 
     {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
      EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{-5.278085281396795, -1.026785580071397}, \
{-5.632926139588367, -1.6005011703248706`}, {-5.867382867443465, \
-0.4162098426517249}, {-5.657386996906834, 
       0.8894833661962755}, {-5.293195173352407, 0.5121709284712019}}]}, 
     {RGBColor[0.7333333333333333, 0.7333333333333333, 0.7333333333333333], 
      EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{-5.455505710492581, -1.3136433751981338`}, \
{-5.750154503515915, -1.0083555064882979`}, {-5.7623849321751495`, 
       0.23663676177227533`}, {-5.475291085129621, 
       0.7008271473337387}, {-5.285640227374601, -0.2573073258000975}}]}, 
     {RGBColor[0.8, 0.8, 0.8], EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{-5.602830107004248, -1.1609994408432158`}, \
{-5.756269717845532, -0.38585937235801127`}, {-5.618838008652386, 
       0.46873195455300704`}, {-5.380465656252111, 
       0.2217599107668206}, {-5.37057296893359, -0.7854753504991157}}]}, 
     {RGBColor[0.8666666666666667, 0.8666666666666667, 0.8666666666666667], 
      EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{-5.67954991242489, -0.7734294066006135}, \
{-5.687553863248959, 0.041436291097497885`}, {-5.4996518324522485`, 
       0.3452459326599138}, {-5.375519312592851, -0.2818577198661475}, \
{-5.486701537968919, -0.9732373956711657}}]}, 
     {RGBColor[0.9333333333333333, 0.9333333333333333, 0.9333333333333333], 
      EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{-5.683551887836924, -0.3659965577515578}, \
{-5.593602847850604, 0.19334111187870584`}, {-5.43758557252255, 
       0.031694106396883165`}, {-5.431110425280885, -0.6275475577686567}, \
{-5.583125725196904, -0.8733334011358896}}]}, 
     {RGBColor[1., 1., 1.], EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{-5.638577367843764, -0.08632772293642599}, \
{-5.515594210186577, 
       0.1125176091377945}, {-5.434347998901718, -0.29792672568588674`}, \
{-5.507118075238894, -0.7504404794522732}, {-5.633338806516914, \
-0.6196649794437237}}]}},
    ImageCache->GraphicsData["CompressedBitmap", "\<\
eJyFnQeQZkURx7/9wsa72wtwwB3pyDnnDIeACCrmiCIgoJIRM0YURTFiBAvP
gKKilFIYEBVUtAot0DrlwIiKYgIUzPjs37z+z9dvvrd3VC17u997Pf/u6TQ9
PbPHn3TB6aeeedIFZ5x80uZHn3fSOaefcfL5mx919nn2q95Yp9M5zr7u3LzD
vyv7p//vuMr+63RWpm+96pFHHqn8v854/dHh/tEf//jH6s1vfnN1ySWXdCbr
jw5N3wbVfffdV731rW+ttt9+e6hWT3/60/XIwf7273//++qyyy6rdthhB/uJ
oXs8Vg52kFP885//XB100EGJ2sTERDU5Odnp+mtPetKTytcO9B/+97//Veee
e25+bfHixdXU1JTefOxjHzvXm5///Oer8fHxqt/vVwsXLkxvTk9P681jjjkm
EQ9vHpC+TVS/+MUvqq233jqNuWDBgmrRokXp7ZmZmQz58MMPr/773//G1/dP
3/rVf/7znyQIXrdXerxvApg3b17lk1QdeOCB1b/+9S8bK7zZq973vvdVY2Nj
MGp06tfmz5+fX9trr72qf/zjH3ptPx/w9ttvrzbYYIOq2+3CadubO+20U/Xw
ww/rzX39zb/97W+JE+d04G/CNDj49TbbbFM9+OCDzTd71UUXXSQGjf/6tdnZ
2fzaFltsgX7ptX38tRtvvJFXmBj7aPga0Hltk002qe699169trfj/N3vflft
vPPO6RHjUG8yrXpzo402qn75y1/qzb38TdT/+c9/vjicDG/2ekltq/XXX7+6
++67m2/2qo997GPpEdO2znR6rZ90iVfQiB//+Mf+xp7+xpo1a6pNN92Upzoz
/sZgMMh69MMf/tDf2MPRmQ5Uxx9/vPjSS6gtvzJ1rb7//e83XupVl156afrU
5rczr3jDrKr63ve+52/s7m/ceuutCTI2N88lgEJjULzF27fccosksJu/9pe/
/KXad999EXFnfniNQXgNadx0003la+edd54Yarxmgky/Z8a+9KUv6bVd/TXs
FUBmJ50F4TWEIDW+7rrr9Nou/prNedJRNGo2vIaW6bVPf/rTem1nd0cY6TOe
8Yz08dKlSxPYWRdmtFTTgsab48lIYQGBrlixolpvvfV4e4G/HK3uyiuv9Jd3
ctdyxx13VBtuuGGSBcNuueWWSWUYXhSi9V1++eVOYUcH/tBDD1VHHHFEdmvL
li0zp2R0TBZQxpqgM6+Fmnn0gtqrX/3qzAzUDItRM+M1ajCHJMEmatHEX//6
1zu1HVw0WDfjRadpVEQQZjHwkqBM+BWveIUT3N4JEmN22223pHGCaGLrB4I4
PgjKdqJln3/++U5wO9cWuQNMNHFtv+ON5cuXJxmK8uabb57Q88SMPyfjf+EL
X9gpyH70ox9NUwqQSHazzTZLBCPgjTfeOAAekj3llFNEdlsne+edd6ZZwMn2
/HGXaSI47mTxYAzHE1P+nDzCiSeeKLLbONl//vOfyetgMr2AFlFCcMLJgn4u
siQEBVlSCQy4fnBUthNBCKa1TH0mK0/0xCc+UWS3drLmzhKDplQeFJuynXKy
bofpiXFXhuitjGOnvJVTvv/++6uDDz44efhIecmSJYjYvP5QDmjfkHLToR19
9NGkEsoDRP7FL35xElcNpSlm5DFdaDHyiOTl+AjQ5q5EfsvgL3E2vDZw8liT
xB3RM4SRbJCXgzzggANSLuLkt3DyP//5z6ttt902uePxOcU+SN4L/4uZMjSq
LZ7lSPfcc0/yFh9hhY9A8HvqU5+asp3xQvzDESbSiFtttVXKfnbfffek/bL6
QTHSjjvuSJ5TjPSOd7xDLqQxkmZishCV4TUz5v+9lMi4N8ijycfD9wMPPOCj
bR6iLZRR2ImWiZkIPgbqe+yxh482SDzCK7/HUTC5/eDJGRX+//CHP/iom/mo
f/rTn6r9998frelMBh59lOwr+BkKJkn7iVHH06jMNZ/BvwfEXvDRSs5++9vf
FgOTCUrNJ1qmcTyEEwYwRTGaQ3aZMgnePs/salSCmmXkPuqmPurNN9+cRiEJ
mmyZ0oH7XY266667Mlo98EQamITStTkNzvwg726IJADAsdx1110OYBNP3Vg8
odee6UyGiWbihsGkxsBAu+yyCwOPu2YBSdbUdV0PnjyP78mmDHRjD90sXs46
66z0CAEPc2ib+F5AATKWAoZiwlFgUXq0GyzOHV76IuKj85bAligstco5rlC0
aYEiIDrE2gotmEoQZtIEeEjLk+EBIg3vWTipsIZf7sPjpXhFGRdxPQoB5alz
o9pbwRlWS1qLx8IKJAnZHq6/788rqBCkiVHf/e53BWFZcGMsYFkXanXI482I
0dQMZUQ4z+222w5VsN9ZLLLfoZYoVm0hQ2huoM7KeEwd0wx4El+ge/e73y3h
ZHQ83UQ3L2pM+pJbl6EQhB71qEclZIZ2PABzA84yAxirMYTA19e+9jXJbCNH
ZTOZRFvjGUVVO9r5CRXPCRXTh/aAwtxmMqGVK1cmZCA0C+tEaFgc0OSDiHko
8w033CBIGzokW+NWhxxySALTd0ju1gKklOIl7uBSbgsoQMKW6thx5JFH2vvA
wiebADMstK6ZFvYVntNEWVgvkFlanKdwbmT1OhrzGo0rta9B5w2R/VSjAy1o
eKIfvIGyyzZ011xzjaPbwNHZSk6JUGfg6DwLbKg/CtWMO700PSRgoIoyO/TQ
QxsyCw4iuzNQ4VxAZem3o1rqqCxMJb0Ez7ij0iJimI/1s4tCZoZMYpDG15CG
wPbZZ59kq/05XUYT2BVXXOHA1ndg1IxOOumkBGliHcBwXkyQjSKJoWn8ypTe
pF0DwwCQJPPdC8BwLHVAHQJzo8MtFMA+8pGPaN3UAKZVUD+4MSjbCA2tYUTm
sUbVT+Ki3oco7bPunA6jCezSSy91YOs5sJ/85CcpNANp0oGhcG3AdthhhwYw
1H6//fYbAcYCGhT2eQTmGUErsNe97nUObIkD+/vf/149+tGPTpCmHBg5u4D1
wlTyOwbMKUitYziciA2dwyD4Ml56LT4j6j/ZAthe9rKXFdguueSS7DPWhY1s
z5OCNv3vp/+PJ5lRtzzhhBOq4447Lk26qV03aKbnlq0Yzz33XMe42DF+61vf
Uk7bmXaMOOg2jKQDjrHNFGqMkxnj4x73uLS0oDyMEnqo77b4k27AiiTA+oIX
vMCxLgrZ9d57751QzjhW1hylEuJ/HWe2RQTFu9H3ApSFlwE0BE95ylMMPIJl
4lEKJQFoJQHPJNtrAXryyScXQM8+++w88RGo/Es3FECZGtSqBIzVELYiYKRK
zQCo3erJT36yAbbFegJsTySgnmMn92B0I2DScmA961nPcsALHfBnP/tZFRU6
8xwwuWYJGPPGIY4CnoymlMDgEQHymMc8BsD9hHcihRU+QvjuMLMvagP7tKc9
zcHOOlh2BngCmPPXAhbpogqAdQfYAAsCgPKFpAGPTRnYXgI74J8J7GGHHZb4
Mm0x8iQ4k3nVEhNmgX7CE57goBc46H//+9+JGnAXOGhV6KKdYRFE6YbHnk5S
QoWFF00AEDkvdvb4xz8e8lIKRmJvJc4Hr0O10GJBNr0qIL/3ve/NWiw5k7c5
bJfzeNZi5cIN6FPJ7N3yEmy8NS6B3ZnnPe95/Nyp5d1LuFFwkvBuUv1+kj26
5n6tGxJcYT/qqKNS7WdQMzDfGfjBD36QE9wFgQFVZyMDvkaJS8Sagdn0I/qB
D0Oo+LRjjz22es5znlOdfvrpQJfepH/znfmw5xsJFTHQ9DEvg8QBkLAKy0rE
wTzngK0h+Af77Do4QPStUzCTfiRrokYmlHBgnqs67bTTqlNPPTWZqamt+5Ve
9it49tr/TKXVT1R7cUDKgoSoYBUcvOpVr8pKJA4oNZcc4MOVM4/MwUzKKVBi
oQcdSgRySslwYW4tKNNEUn6MVzaDlqCMzEGpRSyRMBA29pyDGefgK1/5iqqA
nYWey/omX16buwl0fVUoBnwFqcgnLUc5TNSANiAG334HA8QeM+Y6FnWJ/VKf
tUHHbyOehx56SNCnHXrYsbPYVIf4NuhaSgXhd91RMirOB6FLubFQc8sofw1/
IsFnJwdlxSfxGKBNrzslE7b+HmGCxQoh9v777xcTUyFZR1GBv9iZ8CJHZgJt
kv6LiZxWLk0ywAVFJtD/E088MSGPGvTsZz87aRafY+nYhS+PkhbxHU2xqSiZ
IFPHf993330lE+xN+B6DM9GLTLgZTDVW/85ETkFwggSgWo0WZQsWepA/85nP
rF760pfKFpKaER/wXZEDaA63mYYskNMTM3/zm9+IhUlngX0QSieAX+IrzVBi
kQ24e1u/AZ8vJgFBoh6lCQOfyUCFLrzwQnLpxBpaBpuwMXSn04kFRKI6qpwR
KRm2ikJbmuAcTDgHZtzJUYN9PbfkkgM3hVouCzITKnujv/gVMYHJAo44AAOQ
v+CCC7pMgk0Rv2ZaeByriS5JPLB01bSLBzJwvq9Zs6ZTMKGN5yETg1i1yRuI
vcCBr1/zd6y0NGZCMVMC3Be96EXigOIms6IQAQdKnMRBDAvigHSXBfjq1avF
wbhz8O1vf1t15c76LRwsqvd0nYMVDQ4UiyMHwIIDYKJI6P8ZZ5yRtsD5N99J
NpgM7IOUn/cjCzjQkgVySqR5xx13iIWBs8CmPOEc8Eu9JqRqkNtBvXxd2kCv
FDmiBwH/Nq1J6G2JmzaEETjo2cDSBMABGYilUXV2lGozyTEU4Ltp46Ou8fl/
9lODBzX0DHkYNHhwS/BpGDLixce0NBUjmAHAJHJc0sUXX1y95S1vqc4555zq
zDPPTDaN+LFrGGFKbCpqRlIVOs1uaQpkm8zErbfeqlnoOwdsvvnGYmcDnwVV
vdwM6llYlMETyvhChQUeJ4SPfPnLX85mNVvLaekOeGYC3XrJS15izue5z32u
2SHgmRH0UDrk62B7Bs0dZPToOaZw8803C33P0f/qV79Sg1NnQ0evIpTvL9fo
ZzN6vsjjtCSR9iN+xMu6E3HjI9Ajc6WGyDTHUWPbsgIKkY7enqFsNZGX5BE9
7vTGG28U+m5Yz3h/VWejgD4sBmr09WLR6xRpARDRKyMFvS3403cUB0Wiao78
8UwoFDIXeknB0As8hfJi7ywhuv766wW+1py0acPixjLpZQV0ShwZ+ooMHcMF
MmqD3stwgQRkDJdM1xQkVYo//OEPV2984xuTUbNM8Gwpux8V8qGN6sj9ROzY
4rXXXpuxJ71J2ZBNd2d5KMLJ5Q/CDiqU6w0Nw2x5KyMShYimqAFWimBRGVNu
+kiqd73rXdXb3va2xBGGgFHAmaHupkxuOuVwsiG5nQgaP/7JT36yUJbrrrsu
Zz8bBeDa4x8EcStlQDclbvQbK0WUAOM71omVUjJF1wFP6sDvmJ5TTjkliRs6
pB0gl7h9RyIj1/7WqlWrSj2nvojSltC9byhvcSrl9/p+LfblCTVRFcUglCLu
97znPclCP/e5z6V929e85jVpOmjdYGqoTKNY2EaJHA8gDynkZPQf/OAHS/+C
DnqXkPuXGrl2wAfuXCDHVCpFROAIHscCDKCjuwge7cAssR4TuEnJfmsZ4pve
9KYEnS/eiUlzKvlhouM5VYsyNzIFcJpUMYgInIRIxVdpi4DLmARca3OAo+LI
Fq1Azsj7C1/4QvIxMIXak7fhygBONsRaXAUTZE7k1sJCyNFmm68yIjGFiqkb
hCqP6pyDEEvRFuWCiqWoC9Mv+IQkwf/Qhz6UlhHIHreI1cIevgX49m6tdVMN
5LhFhhdyLNTspURONFJ2L+SYpzOehc4qC9JaTCBwUhqSYCI7Cw9SFdAh8Kuu
uqr68pe/nDQEpadZmcwDvwJyFYhRdiQQodP3zCQLOh6RrLRIxnCyzUSmF1e0
GTrrGuIG9iTomDYw8BZ8JwbhRV75ylcmO33729+eDImJYHKxYZ5B4HgZoJPz
o+wRunyjoJOWmO2X0H/0ox+ljyN0VaJK6HEJB3TSD/QEqePZCZlIFvg4R1pn
P/7xjycWiE2W1CfozJDWXloaRug44Ch1oLPIL7J4rEZSX9+hU2wTdPUayOZN
xX35tkmGj9SBj38nbJJ5EXxoerfQl1wNUud3fEZWz/MUUORZkbwyO23/MiZJ
yKK63RYxlfBpXVHuKPg87ovvBnxWaJTBEvwuamorLxQYUwUDis7PeBc05ac/
/Wlqw5SZkv5iFOBHWxA72oPhIG7Drt4jxhd0vLUpZQmdrlkc7HAFOCypDaNp
L3e8gLeWfF19x9TwfSgPDhv0ljXaM4bXKD7wwAO0WCQbYPWBfeGMiF34Vu3r
YK6q4KtGgajUrgF8m9li/UrU0xbnkoAeNzlMYrbIhfCo9qDHVQo9uvDa1742
IeU7ag96divRGWSPXsEl4Qup4eFBD02sNKJnIYvTQ/jkvcZtgZ7GXy38lnju
KPSN3HFZZsAzguzncTmkszBAyJGSKIn561//mlpuCU0oE9MDAzyD6MUAU2Fh
shvax4iaEb8NWRRxCCKy2sUBP7rjXVtaMkl9fE8548dwETyxB6+Pb0HBETRx
igmgL8u8vamUcWHC43niGMaCAcjrc2ylW3SD+W5eCvkYCGXxfpMLyDNXZTUN
Loz/WofqpdiKxrYJ+Mm/cV5yPCgPxgt+5gL5o0DIHoMmVeBZ5I/vVGEQ3ksF
whExAag/yz5UxTJI4Vc1kKWBZmGRz0IsaZr7rWdheXafZbaA2yNgyfvj9XEv
cMGM0FZ7yy23JKlLu9AizELLRhXT3ft3pEpwpIQeLuDuwQcfLJhgGw6Vj0yo
muZbbzUT03lNqWWUsjVVi73U1yW8Gn0kjynjQulsgSecEN+ZuXoxbnZgI8ID
M+GOKFoD4MQCXtbySmdB9XHWypqHhUVJc7QEMmjw4X6pk+r05jVRJeIBKsJE
AFhZ/dVXX51S5ze84Q1pogjVmA8+ibKJ4oGbRMmId/SmMggf33vvvQUj5BHe
qZgZUUlN3QVDRiZzVENfvTUjl8RMrt0UMRemmEUEADeJGy28+O/LL788x2RM
h9QCPojLmAb/zp0TTX3CUZKS3nPPPc6D9lliQjHbwoMWizUPW2YeQt9LVi60
m8UfQmZSmAj86Ac+8AGWpyyXkkUQNMiJmDB8MrYtJlDQ0r5RIzlYOGF8y5w7
BSvf/OY3c3IhVkKzmGzcWVmcWYm7vLBCpur7/SlXghVcErIHPgUw5sZ1q5tO
RcwmSYZN4eQrykANZ/K0WqGYRZeckGuovWbWS+ahsSy3u+WS+XBeVNBTuQdm
QIShqOaPv2VlgIfCKaJcrG/wuRgn80KMxMJ5l/hB/PSkKXNDs0OcF+KuJWHi
RpuRMfdYMAc3HsXVkSJuPDrV2d9EYkbBDGYUAOug9853vtM8Ak0VrCFQPr6Y
QdYNvAczTBHMxOy1zKGUV6xZs6bg5eGHH06pxVy8BLPvhlgiXpgZXJhmBjfM
RAMS94Sq4bpIwbEW/LFSdFRPuzUww4xiOWryibFE+ayYAdLq1audGe3UM0Kn
0WowHvveov1HNaN8KrPEjWGyMKPdR8wffwsz+GPshF5p/K6qLtgPgZTgKGaU
a0Y1gzGtK4Cjvujbb7+9U3AT0xM1TsRmuXqzb5vGZl9kR71KmhvgAUmejPSX
hSiZC2tq5gnXDKtYEdai7Ax2lDaLHWVajB/ZIb7cdtttzo3aQLBFzU3dG7Rj
5KZ0AyPcyKlp6QE3fIcbNAq/i1MjHwb9FVdckXwCWQA/y1+oCIg3YwEZuSEq
ihv5APJHNg0KdkhbiOuRndCUV/qBxA6kxY7cGjBgQ3vEKtcwOfLRpPBXXnll
+plQw3ff+E/fMRrvsWiwo5pNZAdzsLgidtQMNdpqtlXs3ytdwZzs4IjU3IJj
wrGha4R2VRTwC6xQYA1WSHV4Hi/N7KCr2uEMpqM9ZnGDmhHY2VUouOEQtboR
a242beXGfUHmRk3y4gbHKG4QNDkBekZ9RBskOAA442f0C33UBolxU3v6maxq
qi3IaCM3rKDYZii4YZ/Bj7e29iv2vMFeJEtOFBjwy7g0fLQ3GpkPsZDTWZpW
XHCDP8B9ka6hinADJwQabbpEVnTuRd2hYgVdsjDpnKg/8Otf/7pOB+Yu0dGG
xulGH0bJje9IwE3dbLksb0aQqqFEMIM/ZjqYFhQQARKUYAbz165bZCbuRIgZ
HUazdK9ghq0rVDUyM9o/OB33g0aY0f6HKVlkBskT4vnC4NE5GNGOCr/ndzDD
897g2WCGqudczKxatcqZUasp4cyP7uYe41Fmxhs+AGaIT6G/kEG1F6euACQP
WBWljZG6K2Bx0jZ4wZHBC6+qJVG8qGtWiybxoiOPFvMLXuh289NcmZfYI6m4
GY40RV5yAhWZYX2LP8N2UDGFepWHFE/xZXDDM3gO7V74gZZEO26PihudD7WU
z7lRZzVH1OWZ1csf2yfTyqbrZ1xLFuiIjSzgXs2Uu6lnrJ/8Gp4f9MZJvTM9
lRjBVgDvneM58Lvv6pTeWOdnuX+k4ID7R8gXSw7Uu6c7LtR9iGycEc//FmVv
HBv3UC6tALTZpblQqwNs4PcsrfPiZT+z4tt3JSc6vmyOXZyoEx9b1FzoJErs
QoycYPKjnPTyPjAthrXNz0sIYwuWbEJNG3yGx/ZAXzLifc9zMYKtFYz87Gc/
U9frOhnB3GFEB0VqRjbICRkGS3BkamAE56VuOKYAUyHd5ztTRijx5txGQRBO
dC6uZEUn1akvOys6UkJmoTkZrIMVnQ4SK3VlYWEaWvkgNoGs1QakOYEttA7I
Kl1jWpaPlvOBYYcWY+XGOlppvqFkghZjd86ZidjXFw9eNcFP5PMd6uoHHCZi
VmzPsOUynjdi5ZdZEuS+0H72TkxzC3DdamCLgRI4uQmSmAu4TlnzM/uC+NR8
7mMqLx9JK5gALeyD/pgucLBikE0fF6yOYvWEqsgy7P4fotcFEuauhV7npKgM
6rxCfx3o2U/zI0kqSGm9SBagsxMmfTWzqsoeG7phjg7EXgDukbqjtl/FhXid
hhlPgZ30A7FF7PGoasQOtQb26UY7fTwJgMUyC54g1m3c/RzMvVwZ5U4+0waf
ACX45h8cvg71fepTn8ptBb11wCfRjYqjVh11TYGCedCCA6dad7dO5e6geIRB
73jgb0Wui1GMXoGcwj5+LyIfPYVbK5Gj7uioOvoe2x4JaUwiiPvh8ALohjud
/YyYhC4b6EQGTKYmwDz6yCOPqE1PRzuptcpNzn12uB216u3a/gAxisAFH0KN
Vfqibe2oexk1t1EICq9SJARst4mcTawt6mPh+fF4ZDaeycaBDZFPZv8SZ56h
/AxAN4hcvcHxiChGMWyCHSKPl4cxhRwbD8jrw771hTwu8/TFHS2TQa+pzvkB
hXhcS4ccayTzEwqS5+hHdBiuZIzg0IaYmySEmDHoYW5BfPfdd+dDfp36lrbG
EXwVz3W2MHgRhzuRZhwosUveDxHlwzh8DueN02VDtFziIrQoIyYX0NYnz/sp
yQ5Ipx0oFSSpcDf7i/pY5rx8/EahUM1hkqBO6zVO6g2hxavueIQuoxZot912
W16h2CtTPusqcHknZjw77W7BxTgvGZlSK8Soioifp877Fb6aKHEyc8JJyoMV
jeAcpDuU/MIDVeMaKsqekdd5BDZ4Awc7kw96A1DdFBFoqHp0+gVSrEJISRF+
/etfR6TLXKJ0/+jmBkM5GVbXvuMcjyw16muGrh86/tEAQgJ2xiMCqBKwTU6J
0TxlxshoXFXRghE/gGgIexljL958UHf2dlusXceGESEmhQbnDbxe7AYakWBE
h4Vyd11At9wd6Sc+8Qk1qPoleJONs1KeWEajrsU2yJtiIPAu9E5E1jyePkRm
yVRGhhRWr17dhoxdZvjlApgpd+qqARXHWJIt90OAUftIOPE/epK/l49/R0Rk
3FziFhBt7IgoH+n+q0k/VBPuv8o1g2KHaiT0OTLd/cGayQ12BBk38wkZ5QBc
SAuye+65J4U5GvPLy3KGZ6CnkuyYLhDEYwoBVeMeC90bE2GhTJZXZFhoDzci
BVibOCwKIZ5PNO6MGep97qUYT7jUkhrwtN32MQhw/OKKRv7CHmkLHE4Z6d6m
KXcVcZ9EGgVZOjl0jNgkEa+Q0YniiEKNdkLBguGrX/1qRKGLjVjC8HEUStDr
vFQhJPjhvmxeEYaWxW0wlIJef/31lf/XGWvC4NY1dD1eYhUvc9M5XgSkpm8b
dsoR+HJ2RDvUKSAEbIvOgcDbzZOORwQsqiJZBONXK5hyD23GF6YNAZTDsyFf
DL+ZD3/DDTek2IEA2m4ni116fntIHj7e17C24Wkgn2N47ugjfMO9TDYoY07W
NvMLjeA+2oKushgPw+vkk4Z///vfXw6vO8zo4Oz4HaORe2lh7Pf3dLRxWZGf
Kljr8HSHtg7fT41cGLyfGB20KKAQ6NxFeV2S52INBNrfEQL2+goEKxwBm5od
v4LVfEh5f1+9+BsqoC4eEQLVa0tZ6aYcISDdnwMBV9hg5CzSFupW36aDLK9W
QwfjnSxN/9zPCY+3kasEQAG0AKFbANlW9Hw060FUw8ibX8zUiesSWUE8eO4X
YKpMlCsRVJVbYfRTU9wiv4jMJrHf4hcn/P9lQheToJjweotWJymYu+RysUtR
u0Ck2xcpEmt9FqfGd20yHAlLR1Fj5hOX5OwLw068/I28Q8JhU70VSj9FV5XS
zV7bbvScdHVhOnyZEzMerbLj/bHdIGPt8khr2cVoBTNIXpuaCmCItQuLG1Gl
ulNBcYbXZuUmK50Ba9zuU9Z+KCIWMLZyGEQ2zajve3Z6Lfobpwn9ldVoCzxe
rhlKPBkCK605ILBc1oXnuhmv26K4ukhTc4PNE2SG14H24qXCeWhqs8XQW7tG
rFq1Ki9y02Xpo/qp20HV4Bfv7Qv3H+fRSAX9KvnmaJMpE/eek7jLJAWcanE+
C3WHdy9eRZqVnTxPlR0frL5kdiIl2WH9ngcyvXIt72cn459NhpF0m4JG4lCG
KjGNkQbpWIp3ayS26tLTqApF5xqkORVGldfXqERMTneFUbf1qQtNFThHeaew
qsmZB+BUdZ4Oo6n9T6OhVNxuNzLaJBc65ns2+WIiQpDtt/iFmTCS9uU1Eu6E
m5JGRpqIDQnZIlAUU5DMkF+C660J9TDaxYm6iKVwv0QYpr6Iebz6xje+kfew
pCKmGvFKa5n17FpGgH8WTSMjTCcH51v4WTVURkQt3HQXOnXtg0Tq8MluWqC+
vU/IZz7zmVwA9/CSwHhn98JgyeomlPCZEK3iG1Trhj3dXhUXsiK4NrLwpiW4
k9V132GbWfoKiUUtkUPUUDAtnxvU6iu2dCg5rmlVs51tiQT98JzWvk52RwdJ
x2AE6ft8C1ucuqhhQN/5zndGqdUtXFhDBBmv71vQ4rBFNi49nexODjJsSGal
MhKzLQ457jlpCdmg1mxlaqvbz28hmzbixqovfvGLiVhBEetlLzZqcWwnmmlx
seM1xWuvvTZS3Nkp3nTTTXkbLa6KpZIzLe7TKV599dVtFAkYRKmIkTfFdZuL
dIpXXXVVpKg/LXDNNddkBRbGuE083eIKnaKZRhtFzvCozUQY42WZ0y0+yWfm
sssuixT1VxPa9mh0Xe86KF588cVtFGkh1R1nbbtsUy2ezSledNFFkaL+IATt
bqUPjBf9Tc5N8cILL2yjSC1VvQiiqFM4ZTVJDs1n5qyzzooU9ScyaMUvMUbD
jjtG0gmneNppp7VR5P4LdwOZYmxhiRTlgZyiJfttFLFCyvrRDUTtaUtUnaJl
7JGi/pQIm9neYpApxhYuZd/RnTlFS77bKLLFTGEsUtSfqlgHxRNOOCFS1F9V
oUbT5u+FUWl99GZO0VLkNopxN1YURy8Ga3qziZriypUrx8iDnaL+Vky8Zbnv
CIL2pC/3ZJM1IVsZjOGyCkL0PWnjUoSCOWdCk+7BxljGjZHCOqG9nZD+Ps+Q
UPMciPusjlOxjHSMlLSgQpaiNixpSWi+hIITsCRzjLKNE9Df+2FjBvNnf7Hv
BII6AMkJ2DBj+B4nsJ8TIAuHF27u6oXZB3992Xd621LCMQ4n+dsH+NuEaxq9
LYXK3pFZVu3DZ9U+HmMkf/ug4GWoUVuiXXdrjrEsHUMq/uQh/iSnbmmyJJt1
RAZwjHzMnzzMn7zrrrvSk0ZIWmrmOkaK5U8e4U9SjqZpmIut+vWTJvoxcnZ/
8kh/kuoI6wbWQN36SRPRGHmAP3lU+jZIiRznRXSds+VMSh6OcWIsCUhHuOvd
Pzq2tqGh2vufGOuM/R9SGRq7\
\>"]], ",", 
   GraphicsBox[{
     {RGBColor[0., 0., 0.], EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{4.459259117199613, 8.950698750693832}, {9.997729030864415, 
       0.21310613649286214`}, {
       9.9957816082053, -0.2904307853253037}, {-6.627639908249769, \
-7.48828346462492}, {-7.875380572388542, 
       6.162660208063166}, {-1.0678963174678568`, 9.94281637440512}}]}, 
     {RGBColor[0.1, 0.1, 0.1], EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{8.151572392976146, 3.125637007893185}, {
       9.996430749091672, -0.12258514471924842`}, {-1.0864994027647459`, \
-5.088999238191715}, {-7.4594670176756175`, 
       1.6123456505004703`}, {-3.3370577357747515`, 8.682764318957801}, {
       2.616873972310456, 9.28140462526426}}]}, 
     {RGBColor[0.2, 0.2, 0.2], EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{9.074001571033909, 1.5015259315869682`}, {
       4.454965673163463, -2.6057921914554814`}, {-4.272983210220182, \
-1.7383267938456222`}, {-5.398262376725184, 
       5.147554984729136}, {-0.3600918817321477, 8.98208447211103}, {
       5.384223182643301, 6.203520816578722}}]}, 
     {RGBColor[0.3, 0.3, 0.3], EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{6.764483622098686, -0.5521331299342566}, {
       0.09099123147164079, -2.172059492650552}, {-4.835622793472683, 
       1.704614095441757}, {-2.879177129228666, 7.064819728420083}, {
       2.5120656504555767`, 7.592802644344876}, {7.229112376838605, 
       3.8525233740828453`}}]}, 
     {RGBColor[0.4, 0.4, 0.4], EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{
       3.4277374267851632`, -1.3620963112924043`}, {-2.372315781000521, \
-0.23372269860439743`}, {-3.8573999613506746`, 
       4.38471691193092}, {-0.18355573938654457`, 7.328811186382479}, {
       4.870589013647091, 5.722663009213861}, {6.996797999468646, 
       1.6501951220742943`}}]}, 
     {RGBColor[0.5, 0.5, 0.5], EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{
       0.5277108228923211, -0.7979095049484008}, {-3.114857871175598, 
       2.0754971066632613`}, {-2.02047785036861, 5.8567640491567}, {
       2.343516637130273, 6.52573709779817}, {5.933693506557868, 
       3.6864290656440772`}, {5.212267713126904, 0.14404940539094502`}}]}, 
     {RGBColor[0.6, 0.6, 0.6], EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{-1.2935735241416384`, 
       0.6387938008574302}, {-2.567667860772104, 3.966130577909981}, {
       0.16151939338083166`, 6.191250573477435}, {4.13860507184407, 
       5.106083081721124}, {5.572980609842386, 1.9152392355175112`}, {
       2.8699892680096126`, -0.3269300497787279}}]}, 
     {RGBColor[0.7, 0.7, 0.7], EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{-1.9306206924568712`, 
       2.3024621893837054`}, {-1.2030742336956362`, 5.078690575693708}, {
       2.150062232612451, 5.648666827599279}, {4.855792840843228, 
       3.5106611586193175`}, {4.221484938925999, 0.7941545928693916}, {
       0.7882078719339871, 0.15593187553935114`}}]}, 
     {RGBColor[0.8, 0.8, 0.8], EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{-1.5668474630762537`, 3.6905763825387066`}, {
       0.47349399945840753`, 5.363678701646494}, {3.5029275367278396`, 
       4.579663993109298}, {4.538638889884614, 2.1524078757443545`}, {
       2.5048464054299933`, 0.4750432342043714}, {-0.571206410261442, 
       1.2291970324615282`}}]}, 
     {RGBColor[0.9, 0.9, 0.9], EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{-0.5466767318089231, 4.5271275420926}, {
       1.9882107680931236`, 4.971671347377896}, {4.020783213306227, 
       3.3660359344268262`}, {3.5217426476573035`, 1.313725554974363}, {
       0.9668199975842756, 0.8521201333329498}, {-1.0690269366688478`, 
       2.459886707500117}}]}, 
     {RGBColor[1., 1., 1.], EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{0.7207670181421002, 4.749399444735248}, {
       3.0044969906996752`, 4.168853640902361}, {3.771262930481765, 
       2.3398807447005945`}, {2.2442813226207896`, 
       1.0829228441536562`}, {-0.05110346954228612, 
       1.6560034204165335`}, {-0.8078518342388854, 3.4935071247963587`}}]}}], 
   ",", 
   GraphicsBox[{
     {RGBColor[0., 0., 0.], EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{0.2562551009110595, 9.99671612697175}, {
       1.8542905535187493`, 9.826576542373806}, {
       9.895807389905828, -1.4397902978854968`}, {
       7.625378863136696, -6.4694356163136915`}, {-9.985129017096199, \
-0.5451591620283925}, {-8.920592274234938, 
       4.519185045653689}, {-5.472249065184674, 8.36985604228564}}]}, 
     {RGBColor[0.06666666666666667, 0.06666666666666667, 0.06666666666666667],
       EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{1.0552728272149043`, 9.911646334672778}, {
       5.875048971712289, 4.193393122244155}, {
       8.760593126521261, -3.9546129570995943`}, {-1.1798750769797515`, \
-3.507297389171042}, {-9.452860645665568, 
       1.9870129418126483`}, {-7.196420669709806, 
       6.444520543969665}, {-2.6079969821368074`, 9.183286084628694}}]}, 
     {RGBColor[
      0.13333333333333333`, 0.13333333333333333`, 0.13333333333333333`], 
      EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{3.4651608994635965`, 7.052519728458466}, {
       7.317821049116775, 0.11939008257228023`}, {
       3.790359024770755, -3.7309551731353183`}, {-5.31636786132266, \
-0.7601422236791968}, {-8.324640657687688, 
       4.215766742891157}, {-4.9022088259233065`, 
       7.813903314299179}, {-0.7763620774609515, 9.547466209650736}}]}, 
     {RGBColor[0.2, 0.2, 0.2], EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{5.3914909742901855`, 3.585954905515373}, {
       5.554090036943765, -1.805782545281519}, {-0.7630044182759526, \
-2.2455486984072577`}, {-6.820504259505174, 
       1.72781225960598}, {-6.613424741805497, 
       6.014835028595169}, {-2.839285451692129, 8.680684761974957}, {
       1.3443994110013224`, 8.299992969054601}}]}, 
     {RGBColor[
      0.26666666666666666`, 0.26666666666666666`, 0.26666666666666666`], 
      EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{5.472790505616976, 0.890086180116927}, {
       2.3955428093339064`, -2.0256656218443885`}, {-3.7917543388905637`, \
-0.25886821940063887`}, {-6.716964500655336, 
       3.871323644100574}, {-4.726355096748813, 
       7.347759895285063}, {-0.7474430203454032, 8.49033886551478}, {
       3.367945192645754, 5.942973937284988}}]}, 
     {RGBColor[0.3333333333333333, 0.3333333333333333, 0.3333333333333333], 
      EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{
       3.934166657475441, -0.5677897208637308}, {-0.6981057647783286, \
-1.1422669206225136`}, {-5.25435941977295, 
       1.8062277123499677`}, {-5.721659798702074, 
       5.609541769692818}, {-2.7368990585471082`, 7.919049380399921}, {
       1.3102510861501755`, 7.2166564013998835`}, {4.420367849131365, 
       3.4165300587009573`}}]}, 
     {RGBColor[0.4, 0.4, 0.4], EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{
       1.6180304463485562`, -0.8550283207431222}, {-2.976232592275639, 
       0.3319803958637271}, {-5.488009609237512, 
       3.7078847410213926`}, {-4.229279428624591, 
       6.764295575046369}, {-0.7133239861984664, 7.567852890899902}, {
       2.8653094676407704`, 5.316593230050421}, {4.177267253303403, 
       1.4243701689186132`}}]}, 
     {RGBColor[0.4666666666666667, 0.4666666666666667, 0.4666666666666667], 
      EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{-0.6791010729635415, -0.26152396243969755`}, \
{-4.232121100756576, 2.01993256844256}, {-4.858644518931051, 
       5.236090158033881}, {-2.471301707411529, 7.166074232973136}, {
       1.075992740721152, 6.442223060475161}, {3.5212883604720866`, 
       3.370481699484517}, {2.8976488498259796`, 0.2846709240877455}}]}, 
     {RGBColor[0.5333333333333333, 0.5333333333333333, 0.5333333333333333], 
      EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{-2.4556110868600585`, 
       0.8792043030014312}, {-4.545382809843813, 
       3.6280113632382207`}, {-3.66497311317129, 
       6.201082195503508}, {-0.6976544833451884, 6.8041486467241485`}, {
       2.298640550596619, 4.906352379979839}, {3.2094686051490333`, 
       1.8275763117861312`}, {1.109273888431219, 0.011573480824023985`}}]}, 
     {RGBColor[0.6, 0.6, 0.6], EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{-3.5004969483519357`, 
       2.253607833119826}, {-4.105177961507552, 
       4.914546779370864}, {-2.1813137982582393`, 6.502615421113829}, {
       0.8004930336257154, 5.855250513351994}, {2.754054577872826, 
       3.3669643458829848`}, {2.1593712467901263`, 
       0.9195748963050776}, {-0.6731685992144197, 0.44538889191272757`}}]}, 
     {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
      EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{-3.802837454929744, 
       3.5840773062453453`}, {-3.1432458798828957`, 
       5.7085811002423466`}, {-0.690410382316262, 6.178932967232911}, {
       1.7772738057492707`, 4.611107429617489}, {2.456712912331476, 
       2.1432696210940314`}, {0.7431013237878532, 
       0.6824818941089026}, {-2.0868327737831778`, 1.3494983625162769`}}]}, 
     {RGBColor[0.7333333333333333, 0.7333333333333333, 0.7333333333333333], 
      EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{-3.47304166740632, 4.646329203243846}, {-1.916828131099579,
        5.943757033737629}, {0.5434317117165044, 5.3950201984252}, {
       2.1169933590403733`, 3.37718852535576}, {1.5999071180596647`, 
       1.412875757601467}, {-0.6718657249976623, 
       1.0159901283125898`}, {-2.9448351143564606`, 2.466787834380811}}]}, 
     {RGBColor[0.8, 0.8, 0.8], EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{-2.6949348992529494`, 
       5.295043118490738}, {-0.6866982096915373, 5.669388616081415}, {
       1.3302125353784389`, 4.38610436189048}, {1.858450238550019, 
       2.3950321414786133`}, {0.4640206965310012, 
       1.2144329429570284`}, {-1.8083504196770614`, 
       1.7413889813467005`}, {-3.20893839088139, 3.556558518812329}}]}, 
     {RGBColor[0.8666666666666667, 0.8666666666666667, 0.8666666666666667], 
      EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{-1.6908165544722433`, 5.482215867286076}, {
       0.3217571628434508, 5.027746488985947}, {1.594331386964229, 
       3.3905682516845466`}, {1.16123546754051, 
       1.8047325422178209`}, {-0.6721648615730301, 
       1.4779109621518645`}, {-2.5086444052792256`, 
       2.6489737500795147`}, {-2.95193664506717, 4.425800818651533}}]}, 
     {RGBColor[0.9333333333333333, 0.9333333333333333, 0.9333333333333333], 
      EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{-0.6845296958143963, 5.254981178136012}, {
       0.9580442749038399, 4.209157370335247}, {1.3777834272523695`, 
       2.5976503969511837`}, {0.24453530298374, 
       1.6413217521848427`}, {-1.590404633426128, 
       2.0634423561156896`}, {-2.7302905251731975`, 
       3.537387284365524}, {-2.3213765997697067`, 4.954008342968804}}]}, 
     {RGBColor[1., 1., 1.], EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{0.13675728954472183`, 4.732069274235629}, {
       1.1679138510781046`, 3.4034038836432154`}, {0.8111593651180548, 
       2.1194860745680133`}, {-0.6729346652211939, 
       1.852382054150266}, {-2.1603475792996627`, 
       2.800414820240607}, {-2.525833562471452, 
       4.245697813667164}, {-1.5029531477920515`, 5.104494760552408}}]}},
    ImageCache->GraphicsData["CompressedBitmap", "\<\
eJyVnQe4JEX19puedGfu3bt7N+8Cyy7skgUFAUGRIEFFEDFnEQNgQBFzxIQ5
YcSccwZzzjlgjpgDqChGDPS/fqfOW316dvDz43kus3fu9HTVec95T6hT1See
es7pd7/Pqeeccdqpm48/+9T7nX7GaQ/YfNxZZ6e3ejtUVXVR+nn+5op/N+mf
/r+LmvRf+mPn5cX20mv+/ve/N7///e/tt3X5Ty+0l2Hzz3/+s/nKV77SPP7x
j28OPvjg5mY3uxnv+aeeZy8D+9RXv/rV5rzzzmsOP/zwZn5+vqrtxr1mOBw2
H/3oR+2Ta/Nlz/HL/vWvfzVf+9rXmic/+cnN9a9//WZhYSHdMl92+9vfvrnq
qqvsk2vyZc/0y/797383F198cfOUpzylOfLII5tly5ZVY79s+fLl9pXhsqf5
Zf/5z3+ab3zjG83Tnva05uijj24WFxerZX7Z/e9//8b/q1bny54cLvvmN7/Z
POMZz2hucIMbcIdqhV+2cePG5ic/+Um87Il+GWP/1re+1TzrWc9qjj32WLts
tV+GmHS3Vfmyx9tLv/nOd77TPOc5z2mOO+64ZmlpaZ1fsddeezW/+93v4hXn
hiue+9znNje84Q25Yke/4qUvfWm5x8p8xaP8iu9973vN85///ObGN75xs3Ll
yk1+xWGHHdb89a9/jVc83K/4/ve/37zwhS9sTjjhhGbVqlVb/Ip+v9+8613v
ilc8xK/4wQ9+0FxwwQXNTW5yk2b16tXb/IoTTzzR4ONDS/mKB/oVP/zhD5sX
v/jFzU1vetNmzZo1e/oVk8mk+fSnPx2vONuv+NGPftS87GUva04++WSu2Nev
uOtd71pmviJfcZZf8eMf/7h5+ctf3pxyyinN2rVr9/crkhCab3/72/GKe/sV
l1xySfPKV76yucUtbtGsW7fuQL/iIQ95SLnH8nzFGX4F+vDqV7+6ueUtb9ms
X7/+YL9il112aX75y1/GK+7hV/z0pz9tXvva1za3vvWtmw0bNhzmVzzzmc8s
91jMV5zmV/zsZz9rXv/61ze3ve1tmx133PFwv2K//fZr/vjHP8Yr7uJX/OIX
v2je8IY3NLe73e244ii/4jWveU25x7J8xR39Cgb7pje9qbnDHe7Q7Lzzzsf4
FRjcP/7xj3jF7fyKX/3qV81b3vKW5k53ulOzadOmI7mibnbYYYe6qdN/Ta/X
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\
\>"]], ",", 
   GraphicsBox[{
     {RGBColor[0., 0., 0.], EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{6.317764808598652, 7.751506164819352}, {
       9.03533104446664, -4.285182950224807}, {
       8.652045697891616, -5.01419038744992}, {
       8.02955352990181, -5.960391774912233}, {
       7.6339135904544175`, -6.459362452554846}, {-0.40285125010337497`, \
-9.991882248620135}, {-1.522673352588976, -9.883393438557196}, \
{-4.279996126871245, 9.03778917401635}}]}, 
     {RGBColor[0.06666666666666667, 0.06666666666666667, 0.06666666666666667],
       EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{7.6765479265326455`, 1.7331616072972724`}, {
       8.843688371179127, -4.649686668837363}, {
       8.340799613896714, -5.487291081181077}, {
       7.8317335601781135`, -6.209877113733539}, {
       3.6155311701755215`, -8.22562235058749}, {-0.9627623013461755, \
-9.937637843588664}, {-2.9013347397301104`, -0.42280213227042296`}, {
       1.0188843408637038`, 8.39464766941785}}]}, 
     {RGBColor[
      0.13333333333333333`, 0.13333333333333333`, 0.13333333333333333`], 
      EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{8.260118148855886, -1.4582625307700454`}, {
       8.59224399253792, -5.06848887500922}, {
       8.086266587037414, -5.848584097457308}, {
       5.723632365176817, -7.217749732160514}, {
       1.3263844344146731`, -9.081630097088077}, {-1.9320485205381428`, \
-5.180219987929544}, {-0.9412251994332033, 3.9859227685737135`}, {
       4.3477161336981744`, 5.063904638357561}}]}, 
     {RGBColor[0.2, 0.2, 0.2], EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{8.426181070696902, -3.2633757028896326`}, {
       8.339255289787667, -5.458536486233264}, {
       6.904949476107116, -6.533166914808911}, {
       3.525008399795745, -8.149689914624295}, {-0.30283204306173483`, \
-7.13092504250881}, {-1.436636859985673, -0.597148609677915}, {
       1.7032454671324855`, 4.5249137034656375`}, {6.30391714127703, 
       1.8028210537937581`}}]}, 
     {RGBColor[
      0.26666666666666666`, 0.26666666666666666`, 0.26666666666666666`], 
      EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{8.382718180242286, -4.360956094561448}, {
       7.622102382947391, -5.995851700521087}, {
       5.214978937951431, -7.341428414716603}, {
       1.6110881783670052`, -7.640307478566553}, {-0.8697344515237039, \
-3.8640368260933626`}, {0.13330430357340628`, 1.9638825468938612`}, {
       4.003581304204758, 3.163867378629698}, {
       7.365049105986966, -0.7302773245479373}}]}, 
     {RGBColor[0.3333333333333333, 0.3333333333333333, 0.3333333333333333], 
      EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{8.002410281594837, -5.178403897541267}, {
       6.418540660449411, -6.668640057618845}, {
       3.413033558159218, -7.490867946641577}, {
       0.3706768634216507, -5.752172152329957}, {-0.3682150739751488, \
-0.9500771395997507}, {2.068442803889082, 2.56387496276178}, {
       5.684315205095862, 1.2167950270408805`}, {
       7.873883643114626, -2.5456167095546927`}}]}, 
     {RGBColor[0.4, 0.4, 0.4], EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{7.210475471022124, -5.923521977580056}, {
       4.915787109304315, -7.079754002130211}, {
       1.8918552107904343`, -6.621520049485767}, {
       0.0012308947232509415`, -3.351124645964854}, {0.8501138649569666, 
       0.8068989115810146}, {3.876379004492472, 1.8903349949013302`}, {
       6.779099424105244, -0.6644108412569061}, {
       7.938146962354732, -3.8620103035479803`}}]}, 
     {RGBColor[0.4666666666666667, 0.4666666666666667, 0.4666666666666667], 
      EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{6.06313129016322, -6.5016379898551335`}, {
       3.4038211600473747`, -6.850637025807989}, {
       0.9465430527568426, -4.98632234772531}, {
       0.42567237984010875`, -1.2721128671919197`}, {2.3632464347247195`, 
       1.3486169532411725`}, {5.327739214298858, 0.612962076822212}, {
       7.358623193229988, -2.263210572402443}, {
       7.574311216688428, -4.892766140564018}}]}, 
     {RGBColor[0.5333333333333333, 0.5333333333333333, 0.5333333333333333], 
      EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{4.7334762251052975`, -6.6761375078315615`}, {
       2.175182106402109, -5.91847968676665}, {
       0.6861077162984757, -3.129217607458615}, {1.3944594072824141`, 
       0.03825204302462637}, {3.8454928245117888`, 0.9807895150316923}, {
       6.3431812037644235`, -0.8251242477901155}, {
       7.4664672049592085`, -3.577988356483231}, {
       6.818721253425824, -5.697202065209575}}]}, 
     {RGBColor[0.6, 0.6, 0.6], EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{3.454329165753703, -6.297308597299105}, {
       1.4306449113502921`, -4.523848647112633}, {
       1.040283561790445, -1.5454827822169943`}, {2.6199761158971016`, 
       0.5095207790281593}, {5.094337014138106, 0.0778326336207884}, {
       6.904824204361816, -2.201556302136673}, {
       7.142594229192516, -4.637595210846403}, {
       5.776098739265561, -6.186669786520568}}]}, 
     {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
      EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{2.442487038551998, -5.410578622205869}, {
       1.2354642365703685`, -3.0346657146648135`}, {
       1.8301298388437732`, -0.5179810015944175}, {3.857156565017604, 
       0.29367670632447385`}, {5.999580609249961, -1.0618618342579422`}, {
       7.023709216777166, -3.419575756491538}, {
       6.459346484229039, -5.412132498683485}, {
       4.615213952509632, -6.241989191909837}}]}, 
     {RGBColor[0.7333333333333333, 0.7333333333333333, 0.7333333333333333], 
      EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{1.8389756375611832`, -4.2226221684353415`}, {
       1.5327970377070708`, -1.7763233581296154`}, {
       2.8436432019306888`, -0.11215214763497183`}, {
       4.928368587133782, -0.3840925639667342}, {
       6.511644913013564, -2.24071879537474}, {
       6.741527850503102, -4.415854127587512}, {
       5.537280218369336, -5.827060845296661}, {
       3.528850495530815, -5.826283907057853}}]}, 
     {RGBColor[0.8, 0.8, 0.8], EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{1.6858863376341269`, -2.9994727632824785`}, {
       2.1882201198188795`, -0.9442377528822936}, {
       3.8860058945322358`, -0.248122355800853}, {
       5.720006750073673, -1.312405679670737}, {
       6.626586381758333, -3.3282864614811256`}, {
       6.139404034436219, -5.121457486442086}, {
       4.533065356950075, -5.826672376177257}, {
       2.683913066545999, -5.024453037746597}}]}, 
     {RGBColor[0.8666666666666667, 0.8666666666666667, 0.8666666666666667], 
      EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{1.9370532287265032`, -1.971855258082386}, {
       3.0371130071755577`, -0.5961800543415733}, {
       4.803006322302954, -0.780264017735795}, {
       6.173296565916003, -2.3203460705759316`}, {
       6.382995208097276, -4.224871973961606}, {
       5.336234695693147, -5.474064931309671}, {
       3.6084892117480374`, -5.4255627069619266`}, {
       2.184899702090063, -4.011962900514538}}]}, 
     {RGBColor[0.9333333333333333, 0.9333333333333333, 0.9333333333333333], 
      EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{2.4870831179510304`, -1.2840176562119796`}, {
       3.920059664739256, -0.6882220360386841}, {
       5.488151444109478, -1.5503050441558632`}, {
       6.278145887006639, -3.2726090222687687`}, {
       5.859614951895211, -4.849468452635639}, {
       4.472361953720592, -5.449813819135799}, {
       2.8966944569190503`, -4.718762803738232}, {
       2.060976465408283, -2.991909079298462}}]}, 
     {RGBColor[1., 1., 1.], EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{3.203571391345143, -0.9861198461253319}, {
       4.704105554424367, -1.1192635400972737`}, {
       5.883148665558059, -2.411457033212316}, {
       6.068880419450926, -4.061038737452204}, {
       5.165988452807902, -5.1496411358857195`}, {
       3.684528205319821, -5.084288311437016}, {
       2.4788354611636665`, -3.855335941518347}, {
       2.2740297916796566`, -2.137963367755221}}]}},
    ImageCache->GraphicsData["CompressedBitmap", "\<\
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\
\>"]], ",", 
   GraphicsBox[{
     {RGBColor[0., 0., 0.], EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{1.5482539411111436`, 9.879418491684307}, {
       7.945484127707391, 6.072008067875892}, {9.458864896181835, 
       3.244976868296448}, {9.96283987776703, -0.8612906419873801}, {
       5.44762867072291, -8.385901374683447}, {-8.137341346219143, \
-5.812372649367246}, {-9.642672995511782, -2.649312647013904}, \
{-6.367874605977199, 7.710393829276864}, {-6.1151647988913815`, 
       7.912316947797259}}]}, 
     {RGBColor[0.06666666666666667, 0.06666666666666667, 0.06666666666666667],
       EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{4.746869034409267, 7.975713279780099}, {8.702174511944612, 
       4.65849246808617}, {9.710852386974432, 1.191843113154534}, {
       7.70523427424497, -4.623596008335414}, {-1.3448563377481166`, \
-7.099137012025347}, {-8.890007170865463, -4.230842648190575}, \
{-8.00527380074449, 2.53054059113148}, {-6.2415197024342906`, 
       7.811355388537061}, {-2.283455428890119, 8.895867719740783}}]}, 
     {RGBColor[
      0.13333333333333333`, 0.13333333333333333`, 0.13333333333333333`], 
      EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{6.7245217731769396`, 6.317102873933134}, {
       9.206513449459521, 2.925167790620352}, {
       8.708043330609701, -1.71587644759044}, {
       3.1801889682484266`, -5.86136651018038}, {-5.117431754306789, \
-5.664989830107961}, {-8.447640485804977, -0.8501510285295475}, \
{-7.12339675158939, 5.1709479898342705`}, {-4.262487565662205, 
       8.353611554138922}, {1.231706802759574, 8.435790499760442}}]}, 
     {RGBColor[0.2, 0.2, 0.2], EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{7.96551761131823, 4.621135332276743}, {8.957278390034611, 
       0.604645671514956}, {
       5.944116149429064, -3.78862147888541}, {-0.9686213930291814, \
-5.763178170144171}, {-6.782536120055883, -3.257570429318754}, \
{-7.785518618697184, 2.1603984806523613`}, {-5.692942158625797, 
       6.762279771986597}, {-1.5153903814513157`, 8.394701026949683}, {
       3.978114287968257, 7.376446686846788}}]}, 
     {RGBColor[
      0.26666666666666666`, 0.26666666666666666`, 0.26666666666666666`], 
      EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{8.461398000676422, 2.6128905018958495`}, {
       7.450697269731838, -1.5919879036852271`}, {
       2.4877473781999413`, -4.775899824514791}, {-3.875578756542532, \
-4.510374299731462}, {-7.284027369376533, -0.5485859743331964}, \
{-6.739230388661491, 4.461339126319479}, {-3.6041662700385566`, 
       7.57849039946814}, {1.2313619532584705`, 7.885573856898235}, {
       5.9718159496432435`, 5.998791009561765}}]}, 
     {RGBColor[0.3333333333333333, 0.3333333333333333, 0.3333333333333333], 
      EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{7.956047635204129, 0.5104512991053112}, {
       4.969222323965889, -3.1839438641000086`}, {-0.6939156891712954, \
-4.6431370621231265`}, {-5.579803062959533, -2.5294801370323294`}, \
{-7.011628879019012, 1.9563765759931413`}, {-5.171698329350024, 
       6.0199147628938094`}, {-1.186402158390043, 7.732032128183187}, {
       3.6015889514508572`, 6.94218243323}, {7.2166069751598325`, 
       4.305840755728807}}]}, 
     {RGBColor[0.4, 0.4, 0.4], EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{6.462634979585009, -1.3367462824973488`}, {
       2.1376533173972967`, -3.9135404631115676`}, {-3.136859376065414, \
-3.5863085995777277`}, {-6.2957159709892725`, -0.28655178051959407`}, \
{-6.091663604184518, 3.988145669443475}, {-3.1790502438700337`, 
       6.875973445538499}, {1.207593396530407, 7.337107280706594}, {
       5.409097963305345, 5.624011594479404}, {7.586327305181981, 
       2.408146027417059}}]}, 
     {RGBColor[0.4666666666666667, 0.4666666666666667, 0.4666666666666667], 
      EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{
       4.300144148491153, -2.625143372804458}, {-0.49960302933405876`, \
-3.7499245313446474`}, {-4.716287673527344, -1.936430190048661}, \
{-6.193689787586895, 1.8507969444619405`}, {-4.635356924027276, 
       5.432059557490987}, {-0.9857284236698133, 7.106540363122546}, {
       3.308345679917876, 6.480559437592999}, {6.497712634243663, 
       4.0160788109482315`}, {7.024481142383495, 0.5356998724598552}}]}, 
     {RGBColor[0.5333333333333333, 0.5333333333333333, 0.5333333333333333], 
      EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{
       1.9002705595785472`, -3.1875339520745527`}, {-2.6079453514307014`, \
-2.843177360696654}, {-5.454988730557119, -0.04281662279336018}, \
{-5.414523355807086, 3.641428250976464}, {-2.8105426738485444`, 
       6.269299960306767}, {1.1613086281240312`, 6.793549900357773}, {
       4.90302915708077, 5.2483191242706155`}, {6.761096888313579, 
       2.275889341704043}, {5.662312645437324, -1.0447217501723014`}}]}, 
     {RGBColor[0.6, 0.6, 0.6], EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{-0.3538373959260771, -3.015355656385603}, \
{-4.03146704099391, -1.4429969917450072`}, {-5.4347560431821025`, 
       1.7993058140915519`}, {-4.112533014827815, 
       4.955364105641616}, {-0.8246170228622566, 6.531424930332269}, {
       3.0321688926024004`, 6.020934512314194}, {5.832063022697175, 
       3.7621042329873293`}, {6.211704766875451, 0.6155837957658709}, {
       3.7812916025079355`, -2.116127851123427}}]}, 
     {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
      EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{-2.1926522184599935`, -2.229176324065305}, \
{-4.733111542088006, 0.17815441117327235`}, {-4.773644529004959, 
       3.377334959866584}, {-2.468575018845036, 5.743394517986943}, {
       1.103775934870072, 6.276179721323231}, {4.4321159576497875`, 
       4.8915193726507615`}, {6.021883894786313, 2.1888440143766}, {
       4.996498184691694, -0.750272027678778}, {
       1.7137271032909291`, -2.565741753754515}}]}, 
     {RGBColor[0.7333333333333333, 0.7333333333333333, 0.7333333333333333], 
      EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{-3.462881880274, -1.0255109564460163`}, \
{-4.753378035546483, 1.7777446855199281`}, {-3.6211097739249976`, 
       4.560364738926763}, {-0.6823995419874821, 6.009787119655087}, {
       2.7679459462599296`, 5.583849546986997}, {5.226999926218051, 
       3.5401816935136807`}, {5.509191039739004, 0.719285993348911}, {
       3.3551126439913115`, -1.6580068907166465`}, {-0.23946255758453217`, \
-2.39745903890991}}]}, 
     {RGBColor[0.8, 0.8, 0.8], EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{-4.108129957910242, 
       0.3761168645369559}, {-4.18724390473574, 
       3.1690547122233457`}, {-2.1517546579562397`, 5.285075929290925}, {
       1.0427732021362237`, 5.796818333321042}, {3.9974729362389905`, 
       4.562015620250339}, {5.368095482978527, 2.129733843431296}, {
       4.432151841865157, -0.4693604486838678}, {
       1.5578250432033895`, -2.0277329648132785`}, {-1.8511722189292659`, \
-1.7114849976779631`}}]}, 
     {RGBColor[0.8666666666666667, 0.8666666666666667, 0.8666666666666667], 
      EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{-4.1476869313229905`, 
       1.7725857883801508`}, {-3.16949928134599, 
       4.227065320757135}, {-0.554490727910008, 5.540947131305984}, {
       2.520123069187607, 5.17941697678569}, {4.682784209608759, 
       3.3458747318408175`}, {4.9001236624218425`, 0.830186697373714}, {
       2.9949884425342734`, -1.2485467067485732`}, {-0.14667358786293816`, \
-1.8696089812456207`}, {-2.979651088419754, -0.6676840665705036}}]}, 
     {RGBColor[0.9333333333333333, 0.9333333333333333, 0.9333333333333333], 
      EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{-3.6585931063344903`, 
       2.999825554568643}, {-1.8619950046279992`, 4.884006226031559}, {
       0.9828161706387996, 5.360182054045837}, {3.6014536393981826`, 
       4.262645854313254}, {4.791453936015301, 2.0880307146072656`}, {
       3.947556052478058, -0.2091800046874296}, {
       1.4241574273356676`, -1.559077843997097}, {-1.563162338141346, \
-1.2686465239080622`}, {-3.563669009871372, 0.5524508609048235}}]}, 
     {RGBColor[1., 1., 1.], EdgeForm[{GrayLevel[0], Thickness[Tiny]}], 
      PolygonBox[{{-2.7602940554812445`, 
       3.941915890300101}, {-0.4395894169945998, 5.122094140038698}, {
       2.292134905018491, 4.811413954179546}, {4.196453787706742, 
       3.17533828446026}, {4.369504994246679, 0.9394253549599181}, {
       2.6858567399068627`, -0.8841289243422632}, {-0.06950245540283917, \
-1.4138621839525796`}, {-2.563415674006359, -0.35809783150161933`}, \
{-3.6111310581029312`, 1.7761382077367331`}}]}},
    ImageCache->GraphicsData["CompressedBitmap", "\<\
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
45Hun4JFT///BPLIBk7dvglOReeJU9cb9ElMcS+mSKSIouaL28l1CptWgVwn
e8DQKtHLeHvn1Ysvvli8eu4mKdygJ4uWnTHp3k0wKdwlJl1sUC2nTuf2lV/5
lRW+VcA384p3EnzYJPjzyIw/ecB6mT9dFHteugZdMe2WebZwa4uObfmBv7Lr
YyUA2KyIsYDNNdAUFfaDCqhu8W9x1vsaIgTvdjHx7/me76nq50SZ+G5MnAQC
/muBcyPf7qWJgz+3PzzjW6Ca8G27Ya4Ln+HSZwjG8AAP/jYC9Hzc8UWDBT6A
P3jIjt7lLnfxsPzSSy91r/Lud7/7cI973GO45z3vSdrCbmzhrg308ssv98DX
rlkouEkNbG8QlELG9UZBgZkg1Hve855TpyT8hm/4hso73SykyHKxH3Q0p6iK
637QERrCVDzD+kYSe9cm0FWiOB3tzZCaTBGbpdHDLg11oJa9b+9Z4G28CYWg
GA9eQxnSIxYJ2C8stD7qX1w4GYGC2CQ0TLNJxaw3iOFBWHZRDgYkF2Q+iDhu
Jzz0D3/4w+4hBcnmFvxI4jawYRS7YezEbfG+T9dG3Tr6C5dvZscDHrjPfe5j
E7C5tky2Za4Ln+vB8IAHPMDzEnyNefP8sIc9bPjMz/zM4bM+67OGxz72sf5M
lE4K7oEPfKB/h+wY3xcRyUzYdY7wwqwIl+Rt8EEHgFXWaMjvJmZcbrBJB4kQ
aLXf+I3fmJJy4Tk7SJgiZ9O0oxnFhYZ+OzM1xfMtb3lLRxqiGTVsCDb4HZ+H
v/RIkQ+ZLnMyMrTQZQGROl6ZqiC8evjDH+70NJq0fNvenpHnkF+298tCQdxK
V3ujM8lbN+FMLjZIqoiDfo7EnjkLTpztIA5hN9oF4ZUIHks0RQxHRbD2u3EL
MIEwMrbITIV4AVP5HHjAFY9+9KMbp8vOSJdt3nW6QAARkV8wVggbhNmNi4re
yDMiiA4sFnHh8ryZh1aZhyrlJJJ5rmh0MwJTEnXDD/3QDznvQJrjM7krHFMI
lM1bDm5gc14jhzaFfZ/N2mfDBJmsNM5DH/pQFyYjz1EI5SRrnGbDp3/6p7vw
zYmFwCVi2UBGNuJ7OHt2+xSYrD4VLxnVRsupeFuWE8ZCC6Hi/+Zv/uZ4IdSW
P/WeIGay0NG+eZBkDJEtAejUInJjcthAWQbXOc0ipGoysSRqEAuxIeqGMEai
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
ma1J8U8fvW7TU3Oz/wVm92jX\
\>"]]}], "}"}]], "Output",
 CellChangeTimes->{{3.693738523499879*^9, 3.693738541666185*^9}, 
   3.6937391637956963`*^9, 3.6937391970395327`*^9, 3.693739350276568*^9, 
   3.6937394161326237`*^9, 3.693739840918013*^9, {3.693739977577764*^9, 
   3.693739991578547*^9}, {3.693740067803081*^9, 3.693740162722136*^9}, {
   3.6937401973962097`*^9, 3.6937402372562933`*^9}, 3.693741402168352*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{"makepolygons", "[", 
     RowBox[{"pts", ",", 
      RowBox[{"10", "+", 
       RowBox[{"2", "t"}]}], ",", "t"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "2", ",", "50", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.693741488427053*^9, 3.6937416322479553`*^9}, {
   3.693743267371128*^9, 3.693743267855052*^9}, 3.6937433139660254`*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 17, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 2, 50, 1}}, Typeset`size$$ = {
    360., {177., 182.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`t$174167$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 2}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$174167$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[
        $CellContext`makepolygons[$CellContext`pts, 10 + 
         2 $CellContext`t$$, $CellContext`t$$]], 
      "Specifications" :> {{$CellContext`t$$, 2, 50, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{405., {222., 228.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.6937414093249483`*^9, {3.693741479845779*^9, 3.693741540941474*^9}, {
   3.693741575026683*^9, 3.693741632681281*^9}, 3.693743268851053*^9, 
   3.693743315112947*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{839, 842},
WindowMargins->{{265, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 882, 25, 54, "Input"],
Cell[1465, 49, 261, 5, 342, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1763, 59, 942, 14, 32, "Input"],
Cell[2708, 75, 51207, 844, 376, 6725, 115, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53952, 924, 19, 0, 64, "Section"],
Cell[53974, 926, 92, 1, 32, "Input"],
Cell[54069, 929, 2415, 64, 159, "Input"],
Cell[56487, 995, 2204, 51, 159, "Input"],
Cell[CellGroupData[{
Cell[58716, 1050, 204, 4, 32, "Input"],
Cell[58923, 1056, 901, 30, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59861, 1091, 156, 3, 32, "Input"],
Cell[CellGroupData[{
Cell[60042, 1098, 93, 1, 24, "Print"],
Cell[60138, 1101, 95, 1, 24, "Print"],
Cell[60236, 1104, 93, 1, 24, "Print"],
Cell[60332, 1107, 93, 1, 24, "Print"],
Cell[60428, 1110, 93, 1, 24, "Print"],
Cell[60524, 1113, 93, 1, 24, "Print"],
Cell[60620, 1116, 9079, 247, 24, "Print"]
}, Open  ]],
Cell[69714, 1366, 9082, 247, 32, "Output"]
}, Open  ]],
Cell[78811, 1616, 2016, 47, 117, "Input"],
Cell[CellGroupData[{
Cell[80852, 1667, 141, 2, 32, "Input"],
Cell[80996, 1671, 1493, 39, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82526, 1715, 227, 6, 32, "Input"],
Cell[82756, 1723, 416, 8, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83209, 1736, 1582, 38, 138, "Input"],
Cell[84794, 1776, 121680, 2014, 482, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[206511, 3795, 464, 11, 32, "Input"],
Cell[206978, 3808, 1802, 37, 467, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

